from Conv import Conv_simulation
from Pooling import Pooling_simulation
from ReLU import ReLU_simulation
from HardSwish import HardSwish_simulation
from FCReLU import FCReLU_simulation
from FullyCon import FullyCon_simulation
from FullyConForLarge import FullyConForLarge_simulation
from BN import BN_simulation
from ADD import Add_simulation
from Multiply import Multiply_simulation
from DwConv import DwConv_simulation
from GloAvePooling import GloAvePooling_simulation
from SAEConv import SAEConv_simulation
from HardSigmoid import HardSigmoid_simulation
import numpy as np
import time

Conv_name = 'ConvOne'
Conv_title= 'ConvOne'
InputValueIn =np.array([[
    [0.63375100, 0.65313600, 0.76944600, 0.78883100, 0.67252100, 0.59498100, 0.71129100, 0.65313600, 0.63375100, 0.65313600, 0.69190600, 0.67252100, 0.69190600, 0.78883100, 0.84698500, 0.86637000, 0.80821500, 0.71129100, 0.67252100, 0.67252100, 0.59498100, 0.45928700, 0.47867200, 0.43990200, 0.45928700, 0.34297700, 0.28482300, 0.30420800, 0.34297700, 0.22666800, 0.01343400, -0.18041500],
    [0.51744200, 0.49805700, 0.65313600, 0.78883100, 0.71129100, 0.67252100, 0.75006100, 0.71129100, 0.73067600, 0.59498100, 0.57559600, 0.65313600, 0.73067600, 0.86637000, 0.88575500, 0.88575500, 0.84698500, 0.67252100, 0.55621200, 0.49805700, 0.38174700, 0.26543800, 0.28482300, 0.30420800, 0.45928700, 0.42051700, 0.38174700, 0.32359300, 0.34297700, 0.20728300, -0.00595100, -0.12226100],
    [0.49805700, 0.49805700, 0.63375100, 0.80821500, 0.67252100, 0.73067600, 0.76944600, 0.76944600, 0.73067600, 0.71129100, 0.63375100, 0.61436600, 0.69190600, 0.78883100, 0.80821500, 0.84698500, 0.86637000, 0.65313600, 0.38174700, -0.08349100, -0.29672500, -0.52934400, -0.47118900, -0.21918500, -0.10287600, 0.16851300, 0.34297700, 0.28482300, 0.32359300, 0.26543800, 0.09097400, -0.10287600],
    [0.57559600, 0.57559600, 0.67252100, 0.94391000, 0.80821500, 0.80821500, 0.84698500, 0.84698500, 0.76944600, 0.76944600, 0.80821500, 1.27345300, 1.00206500, 0.61436600, 0.71129100, 0.75006100, 0.63375100, 0.45928700, -0.41303400, -0.43241900, -0.52934400, -0.64565300, -0.87827200, -0.99458200, -0.76196300, -0.82011800, -0.23857000, 0.12974300, 0.28482300, 0.28482300, 0.20728300, 0.03281900],
    [0.57559600, 0.59498100, 0.69190600, 0.86637000, 0.84698500, 0.73067600, 0.84698500, 0.78883100, 0.75006100, 0.75006100, 0.92452500, 2.33962400, 1.35099300, 0.49805700, 0.40113200, 0.32359300, -0.27734000, -0.91704200, -0.78134800, -0.23857000, -0.25795500, -0.37426500, -0.54872900, -0.62626900, -0.99458200, -0.80073300, -0.78134800, -0.39364900, 0.05220400, 0.24605300, 0.14912800, 0.07158900],
    [0.43990200, 0.14912800, 0.09097400, 0.42051700, 0.69190600, 0.76944600, 0.80821500, 0.80821500, 0.73067600, 0.76944600, 0.73067600, 1.06021900, 0.61436600, 0.05220400, -0.54872900, -1.14966100, -1.09150600, -1.14966100, -0.70380800, -0.14164600, -0.06410600, -0.12226100, -0.21918500, -0.60688400, -0.50995900, -0.66503800, -1.30474100, -1.13027600, -0.33549500, 0.28482300, 0.24605300, 0.16851300],
    [0.03281900, -0.31611000, -1.51797500, -0.72319300, 0.53682700, 0.86637000, 0.82760000, 0.86637000, 0.84698500, 0.78883100, 0.75006100, 0.42051700, 0.07158900, 0.03281900, -0.49057400, -1.11089100, -0.91704200, -1.03335200, -0.82011800, 0.12974300, 0.40113200, -0.02533600, -0.39364900, -0.35488000, -0.19980000, -0.78134800, -1.20781600, -1.53736000, -0.89765700, 0.12974300, 0.30420800, 0.16851300],
    [0.11035800, -0.50995900, -1.61489900, -1.07212200, 0.34297700, 0.80821500, 0.76944600, 0.82760000, 0.88575500, 0.69190600, 0.28482300, -0.10287600, 0.09097400, 0.36236200, -0.18041500, -0.72319300, -0.66503800, -0.78134800, -0.93642700, -0.02533600, 0.73067600, 0.20728300, -0.45180400, -0.37426500, -0.49057400, -0.78134800, -1.38228000, -1.47920500, -1.32412600, -0.35488000, 0.24605300, 0.20728300],
    [0.86637000, -0.43241900, -1.38228000, -0.02533600, 0.53682700, 0.69190600, 0.73067600, 0.78883100, 0.76944600, 0.94391000, -0.23857000, -0.00595100, 0.61436600, 0.59498100, -0.08349100, -0.76196300, -0.83950300, -0.80073300, -0.87827200, -0.85888700, 0.24605300, 0.40113200, -0.23857000, -0.74257800, -0.82011800, -0.76196300, -1.05273700, -1.34351100, -1.65366900, -0.99458200, 0.14912800, 0.22666800],
    [1.06021900, 0.16851300, -0.60688400, 0.55621200, 0.94391000, 0.63375100, 0.59498100, 0.53682700, 1.58361200, 2.16515900, 1.58361200, 0.59498100, 0.94391000, 0.43990200, -0.00595100, -0.62626900, -0.76196300, -0.99458200, -1.28535600, -0.95581200, 0.22666800, 0.34297700, 0.14912800, -0.37426500, -0.76196300, -0.74257800, -0.80073300, -0.97519700, -1.45982000, -1.65366900, -0.58749900, 0.12974300],
    [1.11837400, -0.33549500, 0.32359300, 0.76944600, 1.00206500, 0.57559600, 0.65313600, -0.06410600, 1.69992100, 2.16515900, 1.83561600, 0.75006100, 1.11837400, 0.59498100, -0.00595100, -0.10287600, -0.91704200, -0.87827200, -1.55674500, -0.66503800, 0.96329500, 0.61436600, 0.57559600, -0.35488000, -0.74257800, -0.43241900, -0.72319300, -0.91704200, -1.28535600, -1.63428400, -1.28535600, -0.41303400],
    [1.21529900, -0.49057400, 0.18789800, 0.86637000, 1.19591400, 0.78883100, 0.92452500, 0.16851300, -0.16103100, 1.33160800, 1.42853300, 0.86637000, 1.15714400, 1.23468400, 0.16851300, -0.16103100, -0.45180400, -0.80073300, -1.69243900, -0.00595100, 1.64176700, 0.67252100, 0.40113200, -0.62626900, -0.82011800, -0.60688400, -0.41303400, -0.78134800, -1.01396700, -1.36289500, -1.22720100, -0.95581200],
    [1.23468400, -0.68442300, 0.03281900, 0.96329500, 0.94391000, 0.78883100, 1.02144900, 0.65313600, -0.54872900, 0.82760000, 0.82760000, 0.22666800, 1.17652900, 1.75807600, 0.67252100, -0.04472100, -0.10287600, -0.19980000, -1.45982000, 0.47867200, 1.33160800, 0.57559600, -0.04472100, -0.66503800, -0.80073300, -0.80073300, -0.58749900, -0.76196300, -0.80073300, -1.01396700, -0.89765700, -1.01396700],
    [1.23468400, -0.62626900, 0.51744200, 1.15714400, -0.12226100, 0.20728300, 0.92452500, 0.80821500, -0.43241900, 0.42051700, 0.38174700, 0.80821500, 1.23468400, 1.95192500, 1.06021900, 0.30420800, 0.01343400, -0.16103100, -1.05273700, 0.55621200, 1.17652900, 0.45928700, -0.21918500, -0.74257800, -0.87827200, -1.03335200, -0.87827200, -0.50995900, -0.49057400, -0.68442300, -0.54872900, -0.60688400],
    [1.33160800, -0.33549500, 0.82760000, 1.17652900, -0.39364900, -0.50995900, 0.59498100, 0.80821500, -0.49057400, -0.19980000, 0.24605300, 1.40914800, 1.25406800, 0.90514000, 0.38174700, 0.55621200, 0.40113200, -0.43241900, -1.05273700, 0.51744200, 1.04083400, 0.22666800, 0.09097400, -0.29672500, -0.78134800, -0.66503800, -0.58749900, -0.31611000, -0.19980000, -0.49057400, -0.54872900, -0.16103100],
    [1.38976300, 0.12974300, 0.90514000, 1.13775900, 0.09097400, -0.91704200, 0.28482300, 0.57559600, -0.19980000, 0.09097400, 0.34297700, 2.02946500, 2.26208400, 0.38174700, 0.18789800, 0.11035800, -0.08349100, -0.33549500, -0.58749900, 0.36236200, 0.82760000, 0.51744200, -0.25795500, -0.74257800, -1.05273700, -0.74257800, -0.39364900, -0.25795500, -0.10287600, -0.43241900, -0.08349100, 0.20728300],
    [1.50607200, 0.40113200, 0.82760000, 1.27345300, 0.82760000, -0.91704200, 0.01343400, 0.24605300, 0.24605300, -0.56811400, 0.55621200, 0.92452500, 0.71129100, 0.28482300, -0.23857000, -0.23857000, -0.47118900, -0.39364900, -0.25795500, 0.88575500, 0.59498100, 0.43990200, 0.18789800, -0.31611000, -0.91704200, -0.89765700, -0.60688400, -0.47118900, -0.35488000, -0.00595100, 0.49805700, 0.36236200],
    [1.71930600, 0.73067600, 0.75006100, 1.11837400, 0.98268000, -0.60688400, -0.56811400, 0.59498100, 0.43990200, -0.37426500, 0.07158900, -0.14164600, -0.21918500, -0.18041500, -0.45180400, -0.19980000, -0.76196300, -0.47118900, 0.36236200, -0.14164600, -1.11089100, 0.05220400, 0.14912800, -0.97519700, -1.26597100, -1.30474100, -1.05273700, -0.45180400, -0.18041500, 0.34297700, 0.47867200, 0.28482300],
    [1.68053700, 1.02144900, 0.80821500, 0.92452500, 0.98268000, -0.02533600, -0.76196300, 0.30420800, 0.53682700, 0.18789800, -0.41303400, -0.93642700, 0.16851300, -0.02533600, 0.07158900, 0.42051700, -0.78134800, -0.64565300, 0.47867200, 0.12974300, -0.16103100, -0.35488000, -0.97519700, -1.18843100, -1.57613000, -1.16904600, -0.76196300, 0.14912800, 0.57559600, 0.67252100, 0.55621200, 0.49805700],
    [1.42853300, 1.19591400, 0.88575500, 0.94391000, 1.00206500, 0.36236200, -0.76196300, -0.12226100, -0.06410600, 0.22666800, 0.36236200, -1.07212200, 0.07158900, -0.33549500, 0.38174700, 1.13775900, -0.18041500, -1.01396700, 0.11035800, 0.22666800, 0.16851300, -0.70380800, -1.44043500, -1.42105000, -1.51797500, -0.68442300, -0.08349100, 0.73067600, 0.88575500, 0.75006100, 0.63375100, 0.45928700],
    [0.76944600, 1.35099300, 1.04083400, 1.00206500, 1.07960400, 0.51744200, -0.50995900, 0.11035800, 0.88575500, -0.43241900, -0.62626900, -0.87827200, -0.62626900, -0.06410600, 1.02144900, 1.27345300, 0.47867200, -0.49057400, -0.70380800, -0.74257800, -1.26597100, -1.53736000, -1.69243900, -1.96382800, -1.53736000, -1.26597100, -0.33549500, 0.36236200, 0.36236200, 0.05220400, 0.03281900, -0.10287600],
    [-0.16103100, 1.35099300, 1.00206500, 1.02144900, 1.07960400, 0.24605300, -0.82011800, 0.47867200, 2.32023900, 1.81623100, 0.14912800, 0.16851300, 0.45928700, 0.98268000, 1.25406800, 1.33160800, 0.82760000, -0.00595100, -0.29672500, -1.24658600, -1.75059400, -1.76997900, -1.47920500, -1.30474100, -1.24658600, -1.30474100, -1.09150600, -1.03335200, -0.91704200, -1.09150600, -1.28535600, -1.36289500],
    [-0.89765700, 0.96329500, 0.94391000, 0.98268000, 1.00206500, 0.28482300, -0.31611000, 1.66115200, 2.47531800, 2.45593300, 1.60299700, -0.02533600, -0.21918500, -0.02533600, -0.18041500, -0.06410600, -0.41303400, -1.11089100, -1.11089100, -1.26597100, -1.42105000, -1.45982000, -1.44043500, -1.34351100, -1.34351100, -1.44043500, -1.59551400, -1.44043500, -1.28535600, -1.49859000, -1.59551400, -1.61489900],
    [-1.63428400, -0.56811400, 0.36236200, 0.82760000, 1.02144900, 0.76944600, 0.76944600, 2.33962400, 2.47531800, 1.97131000, -0.29672500, -1.26597100, -1.40166500, -1.47920500, -1.47920500, -1.49859000, -1.55674500, -1.61489900, -1.53736000, -1.61489900, -1.69243900, -1.53736000, -1.53736000, -1.59551400, -1.61489900, -1.53736000, -1.53736000, -1.45982000, -1.36289500, -1.40166500, -1.44043500, -1.55674500],
    [-1.86690300, -1.86690300, -1.28535600, 0.11035800, 0.78883100, 0.12974300, 1.33160800, 2.49470300, 2.24269900, 0.30420800, -1.24658600, -1.45982000, -1.45982000, -1.44043500, -1.47920500, -1.45982000, -1.51797500, -1.61489900, -1.67305400, -1.76997900, -1.75059400, -1.67305400, -1.69243900, -1.61489900, -1.55674500, -1.34351100, -1.22720100, -1.28535600, -1.34351100, -1.45982000, -1.53736000, -1.44043500],
    [-1.49859000, -1.84751800, -1.76997900, -1.01396700, 0.05220400, 0.05220400, 1.73869100, 2.51408800, 1.19591400, -1.14966100, -1.38228000, -1.45982000, -1.42105000, -1.42105000, -1.53736000, -1.55674500, -1.59551400, -1.63428400, -1.73120900, -1.67305400, -1.65366900, -1.65366900, -1.59551400, -1.53736000, -1.28535600, -1.22720100, -1.18843100, -1.28535600, -1.38228000, -1.45982000, -1.07212200, -0.82011800],
    [-1.42105000, -1.75059400, -1.82813300, -1.63428400, -1.14966100, 0.05220400, 1.91315600, 2.22331400, -0.02533600, -1.30474100, -1.47920500, -1.34351100, -1.38228000, -1.57613000, -1.57613000, -1.51797500, -1.53736000, -1.59551400, -1.59551400, -1.57613000, -1.57613000, -1.55674500, -1.38228000, -1.30474100, -1.38228000, -1.53736000, -1.59551400, -1.73120900, -1.44043500, -1.01396700, -0.78134800, -0.95581200],
    [-1.45982000, -1.75059400, -1.86690300, -1.75059400, -1.57613000, -0.91704200, 1.48668700, 1.66115200, -0.54872900, -1.16904600, -1.38228000, -1.49859000, -1.30474100, -1.49859000, -1.65366900, -1.55674500, -1.51797500, -1.49859000, -1.51797500, -1.53736000, -1.44043500, -1.67305400, -1.67305400, -1.49859000, -1.51797500, -1.67305400, -1.88628800, -1.65366900, -1.13027600, -1.13027600, -1.53736000, -1.44043500],
    [-1.45982000, -1.75059400, -1.80874800, -1.78936400, -1.63428400, -1.53736000, -0.41303400, 0.86637000, -1.18843100, -1.38228000, -1.42105000, -1.40166500, -1.24658600, -1.30474100, -1.38228000, -1.55674500, -1.61489900, -1.63428400, -1.53736000, -1.47920500, -1.53736000, -1.61489900, -1.65366900, -1.67305400, -1.71182400, -1.65366900, -1.57613000, -1.20781600, -1.51797500, -1.82813300, -2.13829200, -1.44043500],
    [-1.11089100, -1.61489900, -1.82813300, -1.69243900, -1.71182400, -1.59551400, -1.61489900, -1.05273700, -1.47920500, -1.82813300, -1.90567300, -1.69243900, -1.47920500, -1.34351100, -1.30474100, -1.40166500, -1.34351100, -1.26597100, -1.32412600, -1.40166500, -1.45982000, -1.55674500, -1.67305400, -1.78936400, -1.61489900, -1.22720100, -0.89765700, -1.01396700, -1.34351100, -1.69243900, -2.17706200, -1.65366900],
    [-1.24658600, -1.47920500, -1.75059400, -1.59551400, -1.67305400, -1.61489900, -1.57613000, -1.65366900, -1.61489900, -1.90567300, -1.98321300, -1.84751800, -1.90567300, -1.86690300, -1.73120900, -1.51797500, -1.34351100, -1.22720100, -1.14966100, -0.97519700, -1.09150600, -1.47920500, -1.59551400, -1.59551400, -1.26597100, -0.78134800, -0.31611000, -0.62626900, -1.26597100, -1.92505800, -1.86690300, -2.04136800],
    [-1.38228000, -1.34351100, -1.55674500, -1.59551400, -1.65366900, -1.65366900, -1.65366900, -1.69243900, -1.73120900, -1.92505800, -2.00259800, -1.86690300, -1.94444300, -1.86690300, -2.06075200, -2.08013700, -1.80874800, -1.51797500, -1.24658600, -0.99458200, -1.14966100, -1.40166500, -1.42105000, -1.55674500, -1.13027600, -0.70380800, -0.39364900, -0.70380800, -1.49859000, -1.96382800, -1.76997900, -2.02198300]
],
[
    [-0.21556800, -0.23523500, -0.13690100, -0.09756700, -0.21556800, -0.27456900, -0.15656800, -0.19590100, -0.23523500, -0.19590100, -0.13690100, -0.23523500, -0.23523500, -0.11723400, -0.11723400, -0.07790000, -0.11723400, -0.19590100, -0.23523500, -0.21556800, -0.27456900, -0.31390200, -0.31390200, -0.33356900, -0.31390200, -0.43190400, -0.49090400, -0.51057100, -0.51057100, -0.54990500, -0.62857200, -0.74657300],
    [-0.21556800, -0.25490200, -0.17623500, -0.13690100, -0.21556800, -0.19590100, -0.11723400, -0.17623500, -0.13690100, -0.25490200, -0.23523500, -0.25490200, -0.19590100, -0.07790000, -0.11723400, -0.15656800, -0.15656800, -0.23523500, -0.21556800, -0.15656800, -0.25490200, -0.37290300, -0.41223700, -0.45157000, -0.35323600, -0.41223700, -0.41223700, -0.51057100, -0.49090400, -0.54990500, -0.62857200, -0.68757200],
    [-0.25490200, -0.27456900, -0.23523500, -0.23523500, -0.33356900, -0.15656800, -0.11723400, -0.11723400, -0.15656800, -0.15656800, -0.17623500, -0.27456900, -0.23523500, -0.15656800, -0.17623500, -0.19590100, -0.13690100, -0.17623500, -0.23523500, -0.53023800, -0.64823900, -0.88424100, -0.90390800, -0.74657300, -0.72690600, -0.53023800, -0.39257000, -0.47123700, -0.47123700, -0.49090400, -0.54990500, -0.66790600],
    [-0.31390200, -0.25490200, -0.27456900, -0.21556800, -0.25490200, -0.11723400, -0.05823300, -0.07790000, -0.15656800, -0.11723400, 0.00076700, 0.45310500, 0.13843500, -0.23523500, -0.15656800, -0.17623500, -0.21556800, -0.23523500, -0.84490700, -0.70723900, -0.64823900, -0.64823900, -0.94324100, -1.17924400, -1.04157600, -1.19891000, -0.74657300, -0.49090400, -0.41223700, -0.43190400, -0.47123700, -0.56957100],
    [-0.31390200, -0.17623500, -0.15656800, -0.17623500, -0.17623500, -0.19590100, -0.05823300, -0.13690100, -0.19590100, -0.13690100, 0.09910100, 1.79045000, 0.64977300, -0.17623500, -0.23523500, -0.29423600, -0.84490700, -1.37591200, -1.06124200, -0.39257000, -0.25490200, -0.17623500, -0.41223700, -0.56957100, -1.00224200, -0.88424100, -0.98257500, -0.78590700, -0.53023800, -0.43190400, -0.56957100, -0.58923800],
    [-0.27456900, -0.37290300, -0.45157000, -0.21556800, -0.15656800, -0.19590100, -0.13690100, -0.15656800, -0.23523500, -0.13690100, -0.09756700, 0.29577000, -0.01890000, -0.41223700, -0.94324100, -1.43491300, -1.27757800, -1.31691100, -0.78590700, -0.19590100, -0.03856700, -0.01890000, -0.13690100, -0.53023800, -0.45157000, -0.62857200, -1.27757800, -1.27757800, -0.76624000, -0.35323600, -0.49090400, -0.54990500],
    [-0.45157000, -0.54990500, -1.69058100, -0.96290800, -0.11723400, -0.09756700, -0.15656800, -0.09756700, -0.11723400, -0.13690100, -0.05823300, -0.31390200, -0.49090400, -0.29423600, -0.70723900, -1.10057600, -0.78590700, -0.94324100, -0.76624000, 0.13843500, 0.37443700, -0.09756700, -0.47123700, -0.41223700, -0.23523500, -0.78590700, -1.02190900, -1.49391300, -1.21857700, -0.49090400, -0.47123700, -0.58923800],
    [-0.15656800, -0.53023800, -1.57258000, -1.15957700, -0.23523500, -0.11723400, -0.17623500, -0.13690100, -0.07790000, -0.19590100, -0.27456900, -0.56957100, -0.25490200, 0.15810200, -0.33356900, -0.70723900, -0.54990500, -0.68757200, -0.90390800, -0.09756700, 0.59077200, 0.02043400, -0.58923800, -0.49090400, -0.58923800, -0.82524000, -1.23824400, -1.37591200, -1.49391300, -0.78590700, -0.39257000, -0.51057100],
    [0.74810700, -0.35323600, -1.27757800, -0.03856700, 0.02043400, -0.19590100, -0.11723400, -0.01890000, -0.03856700, 0.23676900, -0.66790600, -0.35323600, 0.35477000, 0.39410400, -0.23523500, -0.84490700, -0.82524000, -0.74657300, -0.88424100, -1.02190900, 0.04010100, 0.23676900, -0.39257000, -0.86457400, -0.90390800, -0.80557400, -0.98257500, -1.29724500, -1.72991500, -1.25791100, -0.33356900, -0.39257000],
    [1.04311000, 0.31543700, -0.45157000, 0.61043900, 0.51210500, -0.13690100, -0.13690100, -0.09756700, 1.12177700, 1.79045000, 1.12177700, 0.15810200, 0.59077200, 0.15810200, -0.25490200, -0.74657300, -0.76624000, -0.96290800, -1.29724500, -1.08090900, 0.04010100, 0.19743600, 0.02043400, -0.49090400, -0.82524000, -0.74657300, -0.74657300, -0.92357500, -1.45457900, -1.82825000, -0.94324100, -0.39257000],
    [1.18077800, -0.13690100, 0.55143900, 0.90544200, 0.64977300, -0.21556800, -0.09756700, -0.66790600, 1.45611400, 1.98711800, 1.33811200, 0.23676900, 0.70877400, 0.27610300, -0.29423600, -0.23523500, -0.92357500, -0.84490700, -1.55291400, -0.74657300, 0.82677500, 0.47277100, 0.47277100, -0.45157000, -0.78590700, -0.41223700, -0.68757200, -0.86457400, -1.25791100, -1.71024800, -1.51358000, -0.82524000],
    [1.33811200, -0.29423600, 0.41377100, 1.02344300, 0.86610800, -0.05823300, 0.00076700, -0.58923800, -0.54990500, 1.16111100, 0.94477600, 0.37443700, 0.74810700, 0.94477600, -0.07790000, -0.31390200, -0.49090400, -0.76624000, -1.67091500, -0.03856700, 1.53478100, 0.57110600, 0.31543700, -0.66790600, -0.84490700, -0.58923800, -0.37290300, -0.70723900, -0.94324100, -1.37591200, -1.33657800, -1.31691100],
    [1.39711300, -0.53023800, 0.21710200, 1.12177700, 0.64977300, 0.00076700, 0.00076700, -0.27456900, -1.08090900, 0.61043900, 0.41377100, -0.17623500, 0.84644100, 1.55444800, 0.51210500, -0.19590100, -0.17623500, -0.17623500, -1.43491300, 0.47277100, 1.25944500, 0.51210500, -0.09756700, -0.68757200, -0.78590700, -0.76624000, -0.54990500, -0.70723900, -0.70723900, -0.98257500, -0.96290800, -1.33657800],
    [1.35777900, -0.54990500, 0.61043900, 1.27911200, -0.25490200, -0.33356900, 0.02043400, -0.13690100, -1.00224200, 0.17776900, 0.04010100, 0.51210500, 1.00377600, 1.82978400, 0.96444200, 0.15810200, -0.11723400, -0.17623500, -1.02190900, 0.57110600, 1.14144400, 0.41377100, -0.25490200, -0.74657300, -0.84490700, -0.98257500, -0.84490700, -0.45157000, -0.43190400, -0.68757200, -0.66790600, -0.98257500],
    [1.43644700, -0.31390200, 0.86610800, 1.23977800, -0.27456900, -0.66790600, -0.07790000, -0.01890000, -0.96290800, -0.33356900, 0.00076700, 1.22011100, 1.12177700, 0.82677500, 0.33510400, 0.39410400, 0.25643600, -0.45157000, -1.02190900, 0.57110600, 1.02344300, 0.19743600, 0.09910100, -0.27456900, -0.72690600, -0.58923800, -0.53023800, -0.25490200, -0.13690100, -0.53023800, -0.74657300, -0.54990500],
    [1.45611400, 0.11876800, 0.86610800, 1.08244400, 0.27610300, -0.78590700, -0.05823300, 0.04010100, -0.56957100, -0.05823300, 0.15810200, 1.92811800, 2.22312000, 0.29577000, 0.13843500, -0.03856700, -0.21556800, -0.37290300, -0.68757200, 0.21710200, 0.70877400, 0.47277100, -0.29423600, -0.74657300, -1.00224200, -0.68757200, -0.37290300, -0.27456900, -0.25490200, -0.72690600, -0.53023800, -0.37290300],
    [1.57411500, 0.45310500, 0.80710800, 1.16111100, 0.92510900, -0.72690600, 0.04010100, 0.05976800, -0.03856700, -0.84490700, 0.39410400, 0.78744100, 0.57110600, 0.17776900, -0.33356900, -0.33356900, -0.43190400, -0.43190400, -0.64823900, 0.39410400, 0.29577000, 0.35477000, 0.13843500, -0.35323600, -0.92357500, -0.86457400, -0.58923800, -0.62857200, -0.78590700, -0.68757200, -0.29423600, -0.37290300],
    [1.81011700, 0.84644100, 0.86610800, 1.20044500, 1.16111100, -0.41223700, -0.53023800, 0.51210500, 0.27610300, -0.58923800, -0.13690100, -0.35323600, -0.41223700, -0.35323600, -0.62857200, -0.25490200, -0.62857200, -0.39257000, 0.09910100, -0.53023800, -1.31691100, -0.05823300, 0.05976800, -1.06124200, -1.31691100, -1.31691100, -1.04157600, -0.58923800, -0.56957100, -0.21556800, -0.13690100, -0.25490200],
    [1.73144900, 1.20044500, 1.02344300, 1.14144400, 1.20044500, 0.15810200, -0.68757200, 0.31543700, 0.49243800, 0.09910100, -0.64823900, -1.15957700, -0.03856700, -0.23523500, -0.11723400, 0.39410400, -0.60890500, -0.53023800, 0.31543700, -0.11723400, -0.27456900, -0.47123700, -1.08090900, -1.25791100, -1.61191400, -1.19891000, -1.06124200, -0.35323600, -0.07790000, -0.05823300, -0.15656800, -0.23523500],
    [1.35777900, 1.29877900, 1.04311000, 1.10211000, 1.16111100, 0.51210500, -0.64823900, -0.03856700, 0.02043400, 0.25643600, 0.21710200, -1.25791100, -0.09756700, -0.51057100, 0.21710200, 1.04311000, -0.09756700, -0.94324100, -0.07790000, 0.02043400, 0.11876800, -0.72690600, -1.45457900, -1.41524600, -1.45457900, -0.64823900, -0.62857200, -0.09756700, -0.03856700, -0.19590100, -0.23523500, -0.31390200],
    [0.64977300, 1.37744600, 1.08244400, 0.98410900, 1.14144400, 0.66944000, -0.39257000, 0.23676900, 1.02344300, -0.35323600, -0.64823900, -0.90390800, -0.64823900, -0.09756700, 0.98410900, 1.16111100, 0.49243800, -0.45157000, -0.88424100, -0.90390800, -1.21857700, -1.39557900, -1.51358000, -1.76924900, -1.29724500, -1.02190900, -0.45157000, 0.04010100, 0.00076700, -0.27456900, -0.19590100, -0.35323600],
    [-0.05823300, 1.51511400, 1.08244400, 0.90544200, 1.10211000, 0.41377100, -0.70723900, 0.59077200, 2.43945600, 1.94778500, 0.33510400, 0.35477000, 0.64977300, 1.16111100, 1.43644700, 1.35777900, 0.96444200, 0.19743600, -0.27456900, -1.19891000, -1.45457900, -1.35624500, -1.04157600, -0.82524000, -0.74657300, -0.76624000, -0.47123700, -0.43190400, -0.37290300, -0.53023800, -0.60890500, -0.64823900],
    [-0.35323600, 1.45611400, 1.18077800, 0.96444200, 1.06277700, 0.45310500, -0.21556800, 1.73144900, 2.53779000, 2.55745700, 1.98711800, 0.39410400, 0.17776900, 0.35477000, 0.19743600, 0.19743600, 0.02043400, -0.58923800, -0.70723900, -0.80557400, -0.76624000, -0.76624000, -0.74657300, -0.58923800, -0.56957100, -0.62857200, -0.53023800, -0.37290300, -0.29423600, -0.51057100, -0.51057100, -0.54990500],
    [-0.66790600, 0.27610300, 0.88577500, 1.00377600, 1.16111100, 0.92510900, 0.84644100, 2.40012200, 2.51812300, 2.12478600, 0.25643600, -0.68757200, -0.84490700, -0.92357500, -0.94324100, -1.00224200, -0.86457400, -0.82524000, -0.82524000, -0.80557400, -0.72690600, -0.64823900, -0.66790600, -0.70723900, -0.66790600, -0.58923800, -0.56957100, -0.53023800, -0.53023800, -0.56957100, -0.54990500, -0.64823900],
    [-0.62857200, -0.70723900, -0.41223700, 0.59077200, 1.10211000, 0.25643600, 1.29877900, 2.49845600, 2.40012200, 0.70877400, -0.56957100, -0.76624000, -0.76624000, -0.74657300, -0.78590700, -0.76624000, -0.72690600, -0.76624000, -0.80557400, -0.86457400, -0.78590700, -0.72690600, -0.74657300, -0.66790600, -0.60890500, -0.39257000, -0.39257000, -0.43190400, -0.41223700, -0.47123700, -0.56957100, -0.39257000],
    [-0.23523500, -0.56957100, -0.74657300, -0.33356900, 0.49243800, 0.25643600, 1.77078300, 2.55745700, 1.47578000, -0.58923800, -0.62857200, -0.68757200, -0.64823900, -0.64823900, -0.78590700, -0.80557400, -0.80557400, -0.82524000, -0.84490700, -0.78590700, -0.72690600, -0.66790600, -0.60890500, -0.54990500, -0.29423600, -0.25490200, -0.27456900, -0.29423600, -0.29423600, -0.35323600, 0.00076700, 0.27610300],
    [-0.17623500, -0.47123700, -0.72690600, -0.78590700, -0.54990500, 0.43343800, 2.08545300, 2.40012200, 0.39410400, -0.60890500, -0.70723900, -0.56957100, -0.60890500, -0.80557400, -0.80557400, -0.78590700, -0.76624000, -0.78590700, -0.72690600, -0.68757200, -0.64823900, -0.51057100, -0.33356900, -0.25490200, -0.35323600, -0.51057100, -0.54990500, -0.62857200, -0.29423600, 0.13843500, 0.29577000, 0.04010100],
    [-0.25490200, -0.49090400, -0.66790600, -0.72690600, -0.78590700, -0.33356900, 1.88878400, 2.06578600, 0.05976800, -0.37290300, -0.56957100, -0.70723900, -0.51057100, -0.70723900, -0.84490700, -0.80557400, -0.76624000, -0.70723900, -0.66790600, -0.66790600, -0.51057100, -0.60890500, -0.58923800, -0.41223700, -0.43190400, -0.58923800, -0.74657300, -0.43190400, 0.11876800, 0.05976800, -0.49090400, -0.53023800],
    [-0.29423600, -0.51057100, -0.60890500, -0.68757200, -0.68757200, -0.76624000, 0.19743600, 1.45611400, -0.45157000, -0.51057100, -0.56957100, -0.54990500, -0.39257000, -0.45157000, -0.53023800, -0.78590700, -0.86457400, -0.84490700, -0.68757200, -0.60890500, -0.60890500, -0.54990500, -0.58923800, -0.60890500, -0.64823900, -0.58923800, -0.41223700, 0.04010100, -0.25490200, -0.64823900, -1.23824400, -0.58923800],
    [0.02043400, -0.45157000, -0.68757200, -0.62857200, -0.70723900, -0.66790600, -0.86457400, -0.31390200, -0.66790600, -0.90390800, -1.02190900, -0.80557400, -0.58923800, -0.45157000, -0.41223700, -0.60890500, -0.56957100, -0.47123700, -0.47123700, -0.51057100, -0.54990500, -0.56957100, -0.68757200, -0.78590700, -0.62857200, -0.21556800, 0.17776900, 0.15810200, -0.13690100, -0.51057100, -1.15957700, -0.74657300],
    [-0.13690100, -0.41223700, -0.74657300, -0.62857200, -0.64823900, -0.60890500, -0.68757200, -0.82524000, -0.74657300, -1.00224200, -1.10057600, -0.96290800, -1.02190900, -0.98257500, -0.84490700, -0.72690600, -0.54990500, -0.43190400, -0.27456900, -0.07790000, -0.19590100, -0.54990500, -0.68757200, -0.68757200, -0.35323600, 0.13843500, 0.64977300, 0.43343800, -0.15656800, -0.80557400, -0.80557400, -1.15957700],
    [-0.31390200, -0.35323600, -0.66790600, -0.72690600, -0.66790600, -0.60890500, -0.70723900, -0.82524000, -0.86457400, -1.06124200, -1.12024300, -0.98257500, -1.06124200, -0.98257500, -1.17924400, -1.27757800, -1.04157600, -0.70723900, -0.37290300, -0.07790000, -0.23523500, -0.53023800, -0.54990500, -0.70723900, -0.27456900, 0.15810200, 0.45310500, 0.23676900, -0.47123700, -0.90390800, -0.76624000, -1.10057600]
],
[
    [-1.26538900, -1.30440900, -1.22636800, -1.18734800, -1.32392000, -1.42147100, -1.30440900, -1.34343000, -1.36294000, -1.42147100, -1.42147100, -1.20685800, -1.26538900, -1.42147100, -1.34343000, -1.36294000, -1.44098100, -1.48000200, -1.46049200, -1.38245100, -1.36294000, -1.34343000, -1.34343000, -1.38245100, -1.36294000, -1.46049200, -1.38245100, -1.42147100, -1.48000200, -1.51902300, -1.51902300, -1.57755300],
    [-1.22636800, -1.44098100, -1.34343000, -1.12881700, -1.26538900, -1.38245100, -1.30440900, -1.34343000, -1.32392000, -1.48000200, -1.42147100, -1.16783700, -1.20685800, -1.42147100, -1.44098100, -1.57755300, -1.63608400, -1.57755300, -1.42147100, -1.24587800, -1.18734800, -1.14832700, -1.20685800, -1.28489900, -1.24587800, -1.32392000, -1.34343000, -1.48000200, -1.55804300, -1.61657400, -1.59706400, -1.55804300],
    [-1.30440900, -1.57755300, -1.51902300, -1.28489900, -1.40196100, -1.36294000, -1.34343000, -1.34343000, -1.38245100, -1.38245100, -1.28489900, -1.10930600, -1.22636800, -1.48000200, -1.49951200, -1.53853300, -1.46049200, -1.30440900, -1.16783700, -1.26538900, -1.20685800, -1.24587800, -1.30440900, -1.24587800, -1.28489900, -1.14832700, -1.22636800, -1.46049200, -1.53853300, -1.55804300, -1.55804300, -1.57755300],
    [-1.44098100, -1.59706400, -1.61657400, -1.36294000, -1.38245100, -1.32392000, -1.28489900, -1.28489900, -1.36294000, -1.34343000, -1.10930600, -0.36791500, -0.75812100, -1.42147100, -1.30440900, -1.16783700, -1.08979600, -0.91420300, -1.30440900, -0.95322400, -0.73861100, -0.58252800, -0.93371400, -1.24587800, -1.20685800, -1.46049200, -1.34343000, -1.32392000, -1.38245100, -1.46049200, -1.46049200, -1.51902300],
    [-1.42147100, -1.28489900, -1.26538900, -1.30440900, -1.38245100, -1.44098100, -1.30440900, -1.36294000, -1.42147100, -1.40196100, -1.07028600, 0.97829500, -0.13379200, -1.12881700, -1.05077600, -0.83616200, -1.24587800, -1.61657400, -1.12881700, -0.30938400, -0.05575100, 0.08082100, -0.17281200, -0.40693600, -0.91420300, -0.85567300, -1.30440900, -1.34343000, -1.28489900, -1.32392000, -1.51902300, -1.51902300],
    [-1.16783700, -0.97273400, -1.10930600, -1.18734800, -1.36294000, -1.46049200, -1.42147100, -1.42147100, -1.49951200, -1.46049200, -1.40196100, -0.56301800, -0.69959000, -1.08979600, -1.38245100, -1.61657400, -1.38245100, -1.34343000, -0.73861100, -0.07526100, 0.11984200, 0.15886300, 0.04180100, -0.34840500, -0.32889500, -0.54350800, -1.30440900, -1.49951200, -1.26538900, -1.08979600, -1.36294000, -1.44098100],
    [-1.10930600, -0.66057000, -1.88971800, -1.67510500, -1.28489900, -1.38245100, -1.44098100, -1.38245100, -1.40196100, -1.49951200, -1.46049200, -1.20685800, -1.07028600, -0.75812100, -0.85567300, -1.10930600, -0.81665200, -0.97273400, -0.77763100, 0.13935200, 0.35396600, -0.11428200, -0.46546700, -0.38742600, -0.21183300, -0.71910100, -0.87518300, -1.46049200, -1.51902300, -1.08979600, -1.28489900, -1.46049200],
    [-0.46546700, -0.42644600, -1.48000200, -1.42147100, -1.12881700, -1.40196100, -1.51902300, -1.46049200, -1.26538900, -1.22636800, -1.22636800, -1.26538900, -0.71910100, -0.13379200, -0.40693600, -0.68008000, -0.50448700, -0.62154900, -0.87518300, -0.13379200, 0.51004800, -0.03624000, -0.64105900, -0.50448700, -0.58252800, -0.77763100, -1.08979600, -1.26538900, -1.59706400, -1.24587800, -1.22636800, -1.46049200],
    [0.58808900, -0.17281200, -1.07028600, -0.01673000, -0.62154900, -1.38245100, -1.42147100, -1.24587800, -0.93371400, -0.36791500, -1.07028600, -0.69959000, 0.13935200, 0.27592400, -0.25085400, -0.77763100, -0.71910100, -0.62154900, -0.79714200, -1.03126500, -0.03624000, 0.17837300, -0.40693600, -0.85567300, -0.87518300, -0.73861100, -0.91420300, -1.18734800, -1.69461500, -1.53853300, -1.07028600, -1.34343000],
    [0.95878500, 0.56857900, -0.17281200, 0.68564100, -0.03624000, -1.22636800, -1.30440900, -1.05077600, 0.62711000, 1.64164500, 1.01731500, 0.10033200, 0.60759900, 0.21739300, -0.13379200, -0.68008000, -0.68008000, -0.83616200, -1.18734800, -1.08979600, -0.03624000, 0.15886300, 0.00278000, -0.48497700, -0.77763100, -0.69959000, -0.69959000, -0.83616200, -1.38245100, -1.92873900, -1.36294000, -1.10930600],
    [1.19290800, 0.15886300, 0.86123300, 1.05633600, 0.15886300, -1.24587800, -1.22636800, -1.30440900, 1.27094900, 2.18793300, 1.44654200, 0.33445500, 0.80270200, 0.35396600, -0.19232300, -0.19232300, -0.87518300, -0.71910100, -1.44098100, -0.71910100, 0.78319200, 0.45151700, 0.47102700, -0.42644600, -0.71910100, -0.34840500, -0.68008000, -0.79714200, -1.07028600, -1.57755300, -1.61657400, -1.32392000],
    [1.46605200, 0.04180100, 0.76368200, 1.25143900, 0.43200700, -1.07028600, -1.14832700, -1.36294000, -0.66057000, 1.44654200, 0.97829500, 0.37347600, 0.72466100, 0.88074300, -0.15330200, -0.36791500, -0.48497700, -0.68008000, -1.55804300, -0.01673000, 1.52458300, 0.54906900, 0.31494500, -0.62154900, -0.75812100, -0.50448700, -0.38742600, -0.64105900, -0.69959000, -1.14832700, -1.28489900, -1.71412600],
    [1.56360400, -0.17281200, 0.58808900, 1.38801100, 0.37347600, -0.89469300, -1.18734800, -1.30440900, -1.36294000, 0.74417100, 0.23690400, -0.38742600, 0.66613000, 1.34899000, 0.29543500, -0.30938400, -0.17281200, -0.09477100, -1.30440900, 0.51004800, 1.25143900, 0.51004800, -0.05575100, -0.60203900, -0.68008000, -0.66057000, -0.56301800, -0.64105900, -0.48497700, -0.79714200, -0.97273400, -1.75314600],
    [1.54409300, -0.21183300, 0.95878500, 1.52458300, -0.30938400, -0.93371400, -1.08979600, -1.24587800, -1.46049200, 0.11984200, -0.21183300, 0.25641400, 0.80270200, 1.68066500, 0.84172300, 0.06131100, -0.13379200, -0.09477100, -0.89469300, 0.64662000, 1.17339800, 0.43200700, -0.19232300, -0.66057000, -0.73861100, -0.85567300, -0.81665200, -0.38742600, -0.28987400, -0.64105900, -0.87518300, -1.55804300],
    [1.60262400, -0.03624000, 1.13437700, 1.44654200, -0.09477100, -0.91420300, -1.01175500, -1.14832700, -1.55804300, -0.50448700, -0.21183300, 1.07584600, 1.07584600, 0.88074300, 0.51004800, 0.39298600, 0.21739300, -0.36791500, -0.85567300, 0.68564100, 1.09535700, 0.25641400, 0.15886300, -0.17281200, -0.60203900, -0.44595600, -0.46546700, -0.19232300, -0.05575100, -0.66057000, -1.18734800, -1.30440900],
    [1.62213400, 0.43200700, 1.17339800, 1.30997000, 0.54906900, -0.71910100, -0.50448700, -0.71910100, -1.20685800, -0.40693600, 0.04180100, 1.89527800, 2.26597400, 0.45151700, 0.31494500, -0.03624000, -0.25085400, -0.36791500, -0.75812100, 0.08082100, 0.62711000, 0.47102700, -0.25085400, -0.66057000, -0.89469300, -0.52399800, -0.28987400, -0.28987400, -0.40693600, -1.16783700, -1.28489900, -1.28489900],
    [1.75870600, 0.90025400, 1.25143900, 1.44654200, 1.13437700, -0.46546700, 0.23690400, -0.01673000, -0.62154900, -1.49951200, 0.37347600, 0.80270200, 0.52955800, 0.06131100, -0.50448700, -0.46546700, -0.42644600, -0.52399800, -1.08979600, -0.19232300, -0.09477100, 0.23690400, 0.08082100, -0.32889500, -0.81665200, -0.71910100, -0.38742600, -0.62154900, -1.14832700, -1.34343000, -1.14832700, -1.32392000],
    [1.97332000, 1.29046000, 1.36850100, 1.56360400, 1.40752100, -0.17281200, -0.23134300, 0.60759900, -0.05575100, -1.03126500, -0.17281200, -0.36791500, -0.48497700, -0.48497700, -0.79714200, -0.30938400, -0.50448700, -0.36791500, -0.23134300, -0.97273400, -1.59706400, -0.17281200, 0.02229100, -1.03126500, -1.22636800, -1.18734800, -0.95322400, -0.69959000, -0.97273400, -0.89469300, -0.97273400, -1.16783700],
    [1.77821700, 1.52458300, 1.46605200, 1.54409300, 1.44654200, 0.37347600, -0.34840500, 0.56857900, 0.52955800, -0.05575100, -0.66057000, -1.14832700, -0.11428200, -0.34840500, -0.27036400, 0.37347600, -0.40693600, -0.40693600, 0.11984200, -0.40693600, -0.42644600, -0.54350800, -1.08979600, -1.20685800, -1.46049200, -1.05077600, -1.44098100, -1.07028600, -1.01175500, -1.16783700, -1.34343000, -1.32392000],
    [1.29046000, 1.42703200, 1.30997000, 1.38801100, 1.36850100, 0.74417100, -0.28987400, 0.35396600, 0.31494500, 0.41249600, 0.23690400, -1.22636800, -0.11428200, -0.54350800, 0.17837300, 1.05633600, 0.08082100, -0.79714200, -0.21183300, -0.17281200, 0.08082100, -0.69959000, -1.36294000, -1.24587800, -1.20685800, -0.40693600, -1.05077600, -0.89469300, -0.97273400, -1.20685800, -1.24587800, -1.32392000],
    [0.62711000, 1.42703200, 1.19290800, 1.13437700, 1.29046000, 0.90025400, -0.05575100, 0.62711000, 1.38801100, -0.05575100, -0.52399800, -0.79714200, -0.54350800, 0.04180100, 1.15388800, 1.23192900, 0.66613000, -0.25085400, -0.93371400, -0.99224500, -1.10930600, -1.16783700, -1.22636800, -1.42147100, -0.87518300, -0.60203900, -0.75812100, -0.62154900, -0.73861100, -1.03126500, -0.87518300, -0.99224500],
    [0.19788300, 1.68066500, 1.21241800, 1.05633600, 1.27094900, 0.64662000, -0.44595600, 0.88074300, 2.65618000, 2.16842200, 0.58808900, 0.64662000, 0.97829500, 1.52458300, 1.83674800, 1.62213400, 1.30997000, 0.56857900, -0.09477100, -1.01175500, -1.08979600, -0.89469300, -0.52399800, -0.23134300, -0.07526100, -0.05575100, 0.15886300, 0.10033200, 0.11984200, -0.03624000, -0.03624000, 0.02229100],
    [0.37347600, 1.93429900, 1.52458300, 1.23192900, 1.32948000, 0.70515100, -0.01673000, 1.85625800, 2.59764900, 2.69520000, 2.30499500, 0.84172300, 0.68564100, 0.93927400, 0.82221300, 0.74417100, 0.66613000, 0.10033200, -0.19232300, -0.25085400, -0.05575100, -0.07526100, 0.02229100, 0.21739300, 0.33445500, 0.31494500, 0.41249600, 0.52955800, 0.54906900, 0.35396600, 0.45151700, 0.35396600],
    [0.41249600, 1.05633600, 1.44654200, 1.44654200, 1.52458300, 1.17339800, 0.97829500, 2.40254600, 2.48058700, 2.22695400, 0.76368200, -0.05575100, -0.17281200, -0.17281200, -0.13379200, -0.25085400, 0.02229100, 0.11984200, -0.01673000, 0.04180100, 0.21739300, 0.21739300, 0.23690400, 0.27592400, 0.35396600, 0.49053800, 0.45151700, 0.45151700, 0.41249600, 0.39298600, 0.49053800, 0.37347600],
    [0.52955800, 0.31494500, 0.39298600, 1.21241800, 1.50507300, 0.45151700, 1.30997000, 2.50009800, 2.55862800, 1.19290800, 0.25641400, 0.08082100, 0.10033200, 0.13935200, 0.11984200, 0.04180100, 0.06131100, 0.06131100, 0.02229100, -0.01673000, 0.11984200, 0.21739300, 0.21739300, 0.31494500, 0.39298600, 0.60759900, 0.54906900, 0.54906900, 0.62711000, 0.58808900, 0.51004800, 0.68564100],
    [0.93927400, 0.51004800, 0.19788300, 0.43200700, 1.03682600, 0.56857900, 1.85625800, 2.63667000, 1.77821700, 0.08082100, 0.27592400, 0.21739300, 0.25641400, 0.25641400, 0.13935200, 0.02229100, -0.01673000, -0.03624000, -0.01673000, 0.06131100, 0.17837300, 0.33445500, 0.39298600, 0.47102700, 0.70515100, 0.74417100, 0.64662000, 0.68564100, 0.78319200, 0.74417100, 1.03682600, 1.32948000],
    [0.99780500, 0.64662000, 0.31494500, 0.15886300, 0.23690400, 0.97829500, 2.34401500, 2.59764900, 0.76368200, 0.00278000, 0.17837300, 0.33445500, 0.29543500, 0.10033200, 0.10033200, 0.10033200, 0.10033200, 0.10033200, 0.17837300, 0.25641400, 0.33445500, 0.52955800, 0.70515100, 0.78319200, 0.70515100, 0.52955800, 0.51004800, 0.47102700, 0.86123300, 1.25143900, 1.32948000, 1.07584600],
    [0.93927400, 0.68564100, 0.47102700, 0.37347600, 0.23690400, 0.47102700, 2.32450500, 2.34401500, 0.51004800, 0.23690400, 0.29543500, 0.19788300, 0.37347600, 0.17837300, 0.04180100, 0.10033200, 0.15886300, 0.23690400, 0.31494500, 0.35396600, 0.51004800, 0.47102700, 0.49053800, 0.66613000, 0.64662000, 0.49053800, 0.37347600, 0.76368200, 1.32948000, 1.21241800, 0.54906900, 0.49053800],
    [0.91976400, 0.64662000, 0.56857900, 0.52955800, 0.47102700, 0.21739300, 0.88074300, 1.89527800, 0.10033200, 0.13935200, 0.27592400, 0.31494500, 0.49053800, 0.41249600, 0.33445500, 0.11984200, 0.08082100, 0.11984200, 0.31494500, 0.41249600, 0.43200700, 0.49053800, 0.47102700, 0.43200700, 0.41249600, 0.47102700, 0.72466100, 1.25143900, 0.97829500, 0.51004800, -0.21183300, 0.43200700],
    [1.23192900, 0.66613000, 0.45151700, 0.62711000, 0.49053800, 0.35396600, -0.01673000, 0.37347600, 0.00278000, -0.17281200, -0.17281200, 0.06131100, 0.27592400, 0.41249600, 0.45151700, 0.27592400, 0.33445500, 0.45151700, 0.49053800, 0.47102700, 0.45151700, 0.43200700, 0.33445500, 0.21739300, 0.37347600, 0.78319200, 1.27094900, 1.30997000, 1.05633600, 0.62711000, -0.11428200, 0.25641400],
    [1.05633600, 0.66613000, 0.35396600, 0.56857900, 0.49053800, 0.39298600, 0.21739300, -0.03624000, 0.02229100, -0.19232300, -0.23134300, -0.09477100, -0.15330200, -0.11428200, 0.02229100, 0.11984200, 0.27592400, 0.41249600, 0.58808900, 0.82221300, 0.74417100, 0.39298600, 0.25641400, 0.25641400, 0.58808900, 1.09535700, 1.62213400, 1.48556200, 0.97829500, 0.31494500, 0.23690400, -0.13379200],
    [0.90025400, 0.68564100, 0.35396600, 0.39298600, 0.39298600, 0.35396600, 0.17837300, 0.02229100, 0.00278000, -0.17281200, -0.25085400, -0.11428200, -0.19232300, -0.11428200, -0.30938400, -0.48497700, -0.27036400, 0.08082100, 0.45151700, 0.74417100, 0.60759900, 0.33445500, 0.31494500, 0.17837300, 0.60759900, 1.03682600, 1.32948000, 1.19290800, 0.60759900, 0.19788300, 0.29543500, -0.07526100]
]
] )



ConvValuePIn = np.load('data/positive_input_layer.conv.weight.npy')
ConvValueNIn = np.load('data/negative_input_layer.conv.weight.npy')
ConvBiasVoltage = 1
ConvPadding = 1
ConvStride = 1
ConvBiasPIn = None
ConvBiasNIn =  None
ConvBiasPIn = np.load('data/positive_biasconv1.npy')
ConvBiasNIn = np.load('data/negative_biasconv1.npy')
ConvBiasNIn = np.tile(ConvBiasNIn[:,:1], (1, int((InputValueIn.shape[1]-ConvValuePIn.shape[2]+2*ConvPadding)/ConvStride+1)*int((InputValueIn.shape[1]-ConvValuePIn.shape[2]+2*ConvPadding)/ConvStride+1)))
ConvBiasPIn = np.tile(ConvBiasPIn[:,:1], (1, int((InputValueIn.shape[1]-ConvValuePIn.shape[2]+2*ConvPadding)/ConvStride+1)*int((InputValueIn.shape[1]-ConvValuePIn.shape[2]+2*ConvPadding)/ConvStride+1)))
InputValueIn= np.array(Conv_simulation(Conv_name,Conv_title, InputValueIn, ConvValuePIn, ConvValueNIn, ConvBiasVoltage,ConvPadding, ConvStride, ConvBiasPIn, ConvBiasNIn))
np.save('output_data/data1.npy', InputValueIn)

BN_name = 'BNOne'
BN_title= 'BNOne'
BNEXIn=np.load('data/input_layer.bn.running_mean.npy')
BNBiasVoltage=1
BNValueIn=np.load('data/input_layer.bn.running_var.npy')
BNWeightIn=np.load('data/positive_input_layer.bn.a.npy')
BNBiasPIn=np.load('data/positive_input_layer.bn.bias.npy')
BNBiasNIn=np.load('data/negative_input_layer.bn.bias.npy')
InputValueIn= np.array(BN_simulation(BN_name,BN_title, InputValueIn, BNBiasVoltage,BNEXIn, BNWeightIn,BNValueIn,BNBiasPIn,BNBiasNIn))
print(InputValueIn.shape)
np.save('output_data/data2.npy', InputValueIn)



hardswish_name='hardswish'
hardswish_title='hardswish'
InputValueIn=np.load('output_data/data2.npy')
InputValueIn= np.array(HardSwish_simulation(hardswish_name,hardswish_title, InputValueIn))
np.save('output_data/data3.npy', InputValueIn)

Conv_name = 'Bott0dwConv'
Conv_title= 'Bott0dwConv'
InputValueIn=np.load('output_data/data3.npy')
ConvValuePIn = np.load('data/positive_input_layer.body.bottleneck0.dw_conv.0.weight.npy')
ConvValueNIn = np.load('data/negative_input_layer.body.bottleneck0.dw_conv.0.weight.npy')
ConvPadding = 1
ConvStride = 1
InputValueIn= np.array(DwConv_simulation(Conv_name,Conv_title, InputValueIn, ConvValuePIn, ConvValueNIn, ConvPadding, ConvStride))
np.save('output_data/data4.npy', InputValueIn)

BN_name = 'BNBlock0One'
BN_title= 'BNBlock0One'
InputValueIn=np.load('output_data/data4.npy')
BNEXIn=np.load('data/body.bottleneck0.dw_conv.1.running_mean.npy')
BNBiasVoltage=1
BNValueIn=np.load('data/body.bottleneck0.dw_conv.1.running_var.npy')
BNWeightIn=np.load('data/positive_input_layer.body.bottleneck0.dw_conv.1.a.npy')
BNBiasPIn=np.load('data/positive_input_layer.body.bottleneck0.dw_conv.1.bias.npy')
BNBiasNIn=np.load('data/negative_input_layer.body.bottleneck0.dw_conv.1.bias.npy')
InputValueIn= np.array(BN_simulation(BN_name,BN_title, InputValueIn, BNBiasVoltage,BNEXIn, BNWeightIn,BNValueIn,BNBiasPIn,BNBiasNIn))
np.save('output_data/data5.npy', InputValueIn)

ReLU_name='ReLUOne'
ReLU_title='ReLUOne'
InputValueIn=np.load('output_data/data5.npy')
InputValueIn= np.array(ReLU_simulation(ReLU_name,ReLU_title, InputValueIn))
np.save('output_data/data6.npy', InputValueIn)


InputValueIn=np.load('output_data/data6.npy')
GAPool_name='GAPoolOne'
GAPool_title='GAPoolOne'
InputValueIn= np.array(GloAvePooling_simulation(GAPool_name,GAPool_title, InputValueIn))
np.save('output_data/data7.npy', InputValueIn)

Conv_name = 'ConvOne'
Conv_title= 'ConvOne'
ConvBiasVoltage = 1
ConvStride = 1
ConvValuePIn = np.load('data/positive_input_layer.body.bottleneck0.se.reduce.weight.npy')
ConvValueNIn = np.load('data/negative_input_layer.body.bottleneck0.se.reduce.weight.npy')
ConvBiasPIn= np.load('data/positive_input_layer.body.bottleneck0.se.reduce.bias.npy')
ConvBiasNIn = np.load('data/negative_input_layer.body.bottleneck0.se.reduce.bias.npy')
InputValueIn= np.array(SAEConv_simulation(Conv_name,Conv_title, InputValueIn, ConvValuePIn, ConvValueNIn, ConvStride, ConvBiasPIn, ConvBiasNIn, ConvBiasVoltage))
np.save('output_data/data8.npy', InputValueIn)

ReLU_name='ReLUOne'
ReLU_title='ReLUOne'
InputValueIn=np.load('output_data/data8.npy')
InputValueIn= np.array(ReLU_simulation(ReLU_name,ReLU_title, InputValueIn))
np.save('output_data/data9.npy', InputValueIn)

Conv_name = 'ConvTwo'
Conv_title= 'ConvTwo'
ConvBiasVoltage = 1
ConvStride = 1
ConvValuePIn = np.load('data/positive_input_layer.body.bottleneck0.se.expand.weight.npy')
ConvValueNIn = np.load('data/negative_input_layer.body.bottleneck0.se.expand.weight.npy')
ConvBiasPIn= np.load('data/positive_input_layer.body.bottleneck0.se.expand.bias.npy')
ConvBiasNIn = np.load('data/negative_input_layer.body.bottleneck0.se.expand.bias.npy')
InputValueIn= np.array(SAEConv_simulation(Conv_name,Conv_title, InputValueIn, ConvValuePIn, ConvValueNIn, ConvStride, ConvBiasPIn, ConvBiasNIn, ConvBiasVoltage))
np.save('output_data/data10.npy', InputValueIn)

InputValueIn=np.load('output_data/data10.npy')
hardsigmoid_name='hardsigmoid'
hardsigmoid_title='hardsigmoid'
InputValueIn= np.array(HardSigmoid_simulation(hardsigmoid_name,hardsigmoid_title, InputValueIn))
np.save('output_data/data11.npy', InputValueIn)
print(InputValueIn)

InputValueInOne=np.load('output_data/data11.npy')
InputValueInTwo=np.load('output_data/data6.npy')
Multiply_name='Multiply'
Multiply_title='Multiply'
InputValueIn= np.array(Multiply_simulation(Multiply_name,Multiply_title, InputValueInOne,InputValueInTwo))
np.save('output_data/data12.npy', InputValueIn)

InputValueIn=np.load('output_data/data13.npy')
print(InputValueIn.shape)
InputValueIn=np.load('output_data/data14.npy')
print(InputValueIn.shape)
Conv_name = 'ConvOne'
Conv_title= 'ConvOne'
ConvStride = 1
ConvValuePIn = np.load('data/positive_input_layer.body.bottleneck0.contract.0.weight.npy')
ConvValueNIn = np.load('data/negative_input_layer.body.bottleneck0.contract.0.weight.npy')
ConvBiasPIn = None
ConvBiasNIn = None
ConvBiasVoltage=1
ConvPadding=0
InputValueIn= np.array(Conv_simulation(Conv_name,Conv_title, InputValueIn, ConvValuePIn, ConvValueNIn, ConvBiasVoltage,ConvPadding, ConvStride, ConvBiasPIn, ConvBiasNIn))
np.save('output_data/data13.npy', InputValueIn)

BN_name = 'BNBlock0One'
BN_title= 'BNBlock0One'
BNEXIn=np.load('data/body.bottleneck0.contract.1.running_mean.npy')
BNBiasVoltage=1
BNValueIn=np.load('data/body.bottleneck0.contract.1.running_var.npy')
BNWeightIn=np.load('data/positive_input_layer.body.bottleneck0.contract.1.a.npy')
BNBiasPIn=np.load('data/positive_input_layer.body.bottleneck0.contract.1.bias.npy')
BNBiasNIn=np.load('data/negative_input_layer.body.bottleneck0.contract.1.bias.npy')
InputValueIn= np.array(BN_simulation(BN_name,BN_title, InputValueIn, BNBiasVoltage,BNEXIn, BNWeightIn,BNValueIn,BNBiasPIn,BNBiasNIn))
np.save('output_data/data14.npy', InputValueIn)

InputValueInOne=np.load('output_data/data14.npy')
InputValueInTwo=np.load('output_data/data3.npy')
Add_name='BNBlock0One'
Add_title='BNBlock0One'
InputValueIn= np.array(Add_simulation(Add_name,Add_title, InputValueInOne,InputValueInTwo))
np.save('output_data/data15.npy', InputValueIn)

Conv_name = 'ConvOne'
Conv_title= 'ConvOne'
ConvStride = 1
ConvValuePIn = np.load('data/positive_input_layer.body.bottleneck1.expand.0.weight.npy')
ConvValueNIn = np.load('data/negative_input_layer.body.bottleneck1.expand.0.weight.npy')
ConvBiasPIn = None
ConvBiasNIn = None
ConvBiasVoltage=1
ConvPadding=0
InputValueIn= np.array(Conv_simulation(Conv_name,Conv_title, InputValueIn, ConvValuePIn, ConvValueNIn, ConvBiasVoltage,ConvPadding, ConvStride, ConvBiasPIn, ConvBiasNIn))
np.save('output_data/data16.npy', InputValueIn)
print(InputValueIn)

BN_name = 'BNOne'
BN_title= 'BNOne'
BNEXIn=np.load('data/body.bottleneck1.expand.1.running_mean.npy')
BNBiasVoltage=1
BNValueIn=np.load('data/body.bottleneck1.expand.1.running_var.npy')
BNWeightIn=np.load('data/positive_input_layer.body.bottleneck1.expand.1.a.npy')
BNBiasPIn=np.load('data/positive_input_layer.body.bottleneck1.expand.1.bias.npy')
BNBiasNIn=np.load('data/negative_input_layer.body.bottleneck1.expand.1.bias.npy')
InputValueIn= np.array(BN_simulation(BN_name,BN_title, InputValueIn, BNBiasVoltage,BNEXIn, BNWeightIn,BNValueIn,BNBiasPIn,BNBiasNIn))
print(InputValueIn.shape)
np.save('output_data/data17.npy', InputValueIn)

ReLU_name='ReLUOne'
ReLU_title='ReLUOne'
InputValueIn= np.array(ReLU_simulation(ReLU_name,ReLU_title, InputValueIn))
np.save('output_data/data18.npy', InputValueIn)

Conv_name = 'Bott0dwConv'
Conv_title= 'Bott0dwConv'
ConvValuePIn = np.load('data/positive_input_layer.body.bottleneck1.dw_conv.0.weight.npy')
ConvValueNIn = np.load('data/negative_input_layer.body.bottleneck1.dw_conv.0.weight.npy')
ConvPadding = 1
ConvStride = 2
InputValueIn= np.array(DwConv_simulation(Conv_name,Conv_title, InputValueIn, ConvValuePIn, ConvValueNIn, ConvPadding, ConvStride))
np.save('output_data/data19.npy', InputValueIn)

BN_name = 'BNOne'
BN_title= 'BNOne'
BNEXIn=np.load('data/body.bottleneck1.dw_conv.1.running_mean.npy')
BNBiasVoltage=1
BNValueIn=np.load('data/body.bottleneck1.dw_conv.1.running_var.npy')
BNWeightIn=np.load('data/positive_input_layer.body.bottleneck1.dw_conv.1.a.npy')
BNBiasPIn=np.load('data/positive_input_layer.body.bottleneck1.dw_conv.1.bias.npy')
BNBiasNIn=np.load('data/negative_input_layer.body.bottleneck1.dw_conv.1.bias.npy')
InputValueIn= np.array(BN_simulation(BN_name,BN_title, InputValueIn, BNBiasVoltage,BNEXIn, BNWeightIn,BNValueIn,BNBiasPIn,BNBiasNIn))
np.save('output_data/data20.npy', InputValueIn)

ReLU_name='ReLUTwo'
ReLU_title='ReLUTwo'
InputValueIn= np.array(ReLU_simulation(ReLU_name,ReLU_title, InputValueIn))
np.save('output_data/data21.npy', InputValueIn)

Conv_name = 'ConvOne'
Conv_title= 'ConvOne'
ConvValuePIn = np.load('data/positive_input_layer.body.bottleneck1.contract.0.weight.npy')
ConvValueNIn = np.load('data/negative_input_layer.body.bottleneck1.contract.0.weight.npy')
ConvBiasPIn = None
ConvBiasNIn = None
ConvBiasVoltage=1
ConvStride = 1
ConvPadding=0
InputValueIn= np.array(Conv_simulation(Conv_name,Conv_title, InputValueIn, ConvValuePIn, ConvValueNIn, ConvBiasVoltage,ConvPadding, ConvStride, ConvBiasPIn, ConvBiasNIn))
np.save('output_data/data22.npy', InputValueIn)

InputValueIn=np.load('output_data/data22.npy')
BN_name = 'BNBlock0One'
BN_title= 'BNBlock0One'
BNEXIn=np.load('data/body.bottleneck1.contract.1.running_mean.npy')
BNBiasVoltage=1
BNValueIn=np.load('data/body.bottleneck1.contract.1.running_var.npy')
BNWeightIn=np.load('data/positive_input_layer.body.bottleneck1.contract.1.a.npy')
BNBiasPIn=np.load('data/positive_input_layer.body.bottleneck1.contract.1.bias.npy')
BNBiasNIn=np.load('data/negative_input_layer.body.bottleneck1.contract.1.bias.npy')
InputValueIn= np.array(BN_simulation(BN_name,BN_title, InputValueIn, BNBiasVoltage,BNEXIn, BNWeightIn,BNValueIn,BNBiasPIn,BNBiasNIn))
np.save('output_data/data23.npy', InputValueIn)

Conv_name = 'ConvOne'
Conv_title= 'ConvOne'
ConvStride = 1
ConvValuePIn = np.load('data/positive_input_layer.body.bottleneck2.expand.0.weight.npy')
ConvValueNIn = np.load('data/negative_input_layer.body.bottleneck2.expand.0.weight.npy')
ConvBiasPIn = None
ConvBiasNIn = None
ConvBiasVoltage=1
ConvPadding=0
InputValueIn= np.array(Conv_simulation(Conv_name,Conv_title, InputValueIn, ConvValuePIn, ConvValueNIn, ConvBiasVoltage,ConvPadding, ConvStride, ConvBiasPIn, ConvBiasNIn))
np.save('output_data/data24.npy', InputValueIn)
print(InputValueIn)


BN_name = 'BNOne'
BN_title= 'BNOne'
BNEXIn=np.load('data/body.bottleneck2.expand.1.running_mean.npy')
BNBiasVoltage=1
BNValueIn=np.load('data/body.bottleneck2.expand.1.running_var.npy')
BNWeightIn=np.load('data/positive_input_layer.body.bottleneck2.expand.1.a.npy')
BNBiasPIn=np.load('data/positive_input_layer.body.bottleneck2.expand.1.bias.npy')
BNBiasNIn=np.load('data/negative_input_layer.body.bottleneck2.expand.1.bias.npy')
InputValueIn= np.array(BN_simulation(BN_name,BN_title, InputValueIn, BNBiasVoltage,BNEXIn, BNWeightIn,BNValueIn,BNBiasPIn,BNBiasNIn))
print(InputValueIn.shape)
np.save('output_data/data25.npy', InputValueIn)

ReLU_name='ReLUOne'
ReLU_title='ReLUOne'
InputValueIn= np.array(ReLU_simulation(ReLU_name,ReLU_title, InputValueIn))
np.save('output_data/data26.npy', InputValueIn)

InputValueIn=np.load('output_data/data26.npy')
Conv_name = 'Bott0dwConv'
Conv_title= 'Bott0dwConv'
ConvValuePIn = np.load('data/positive_input_layer.body.bottleneck2.dw_conv.0.weight.npy')
ConvValueNIn = np.load('data/negative_input_layer.body.bottleneck2.dw_conv.0.weight.npy')
ConvPadding = 1
ConvStride = 1
InputValueIn= np.array(DwConv_simulation(Conv_name,Conv_title, InputValueIn, ConvValuePIn, ConvValueNIn, ConvPadding, ConvStride))
np.save('output_data/data27.npy', InputValueIn)

BN_name = 'BNTwo'
BN_title= 'BNTwo'
InputValueIn=np.load('output_data/data27.npy')
BNEXIn=np.load('data/body.bottleneck2.dw_conv.1.running_mean.npy')
BNBiasVoltage=1
BNValueIn=np.load('data/body.bottleneck2.dw_conv.1.running_var.npy')
BNWeightIn=np.load('data/positive_input_layer.body.bottleneck2.dw_conv.1.a.npy')
BNBiasPIn=np.load('data/positive_input_layer.body.bottleneck2.dw_conv.1.bias.npy')
BNBiasNIn=np.load('data/negative_input_layer.body.bottleneck2.dw_conv.1.bias.npy')
InputValueIn= np.array(BN_simulation(BN_name,BN_title, InputValueIn, BNBiasVoltage,BNEXIn, BNWeightIn,BNValueIn,BNBiasPIn,BNBiasNIn))
print(InputValueIn.shape)
np.save('output_data/data28.npy', InputValueIn)

ReLU_name='ReLUTwo'
ReLU_title='ReLUTwo'
InputValueIn= np.array(ReLU_simulation(ReLU_name,ReLU_title, InputValueIn))
np.save('output_data/data29.npy', InputValueIn)

Conv_name = 'ConvOnee'
Conv_title= 'ConvOnee'
ConvStride = 1
ConvValuePIn = np.load('data/positive_input_layer.body.bottleneck2.contract.0.weight.npy')
ConvValueNIn = np.load('data/negative_input_layer.body.bottleneck2.contract.0.weight.npy')
ConvBiasPIn = None
ConvBiasNIn = None
ConvBiasVoltage=1
ConvPadding=0
InputValueIn= np.array(Conv_simulation(Conv_name,Conv_title, InputValueIn, ConvValuePIn, ConvValueNIn, ConvBiasVoltage,ConvPadding, ConvStride, ConvBiasPIn, ConvBiasNIn))
np.save('output_data/data30.npy', InputValueIn)

BN_name = 'BNOnee'
BN_title= 'BNOnee'
BNEXIn=np.load('data/body.bottleneck2.contract.1.running_mean.npy')
BNBiasVoltage=1
BNValueIn=np.load('data/body.bottleneck2.contract.1.running_var.npy')
BNWeightIn=np.load('data/positive_input_layer.body.bottleneck2.contract.1.a.npy')
BNBiasPIn=np.load('data/positive_input_layer.body.bottleneck2.contract.1.bias.npy')
BNBiasNIn=np.load('data/negative_input_layer.body.bottleneck2.contract.1.bias.npy')
InputValueIn= np.array(BN_simulation(BN_name,BN_title, InputValueIn, BNBiasVoltage,BNEXIn, BNWeightIn,BNValueIn,BNBiasPIn,BNBiasNIn))
np.save('output_data/data31.npy', InputValueIn)


InputValueInOne=np.load('output_data/data31.npy')
InputValueInTwo=np.load('output_data/data23.npy')
Add_name='BNBlock0One'
Add_title='BNBlock0One'
InputValueIn= np.array(Add_simulation(Add_name,Add_title, InputValueInOne,InputValueInTwo))
np.save('output_data/data32.npy', InputValueIn)

InputValueIn=np.load('output_data/data32.npy')
Conv_name = 'ConvOne'
Conv_title= 'ConvOne'
ConvStride = 1
ConvValuePIn = np.load('data/positive_input_layer.body.bottleneck3.expand.0.weight.npy')
ConvValueNIn = np.load('data/negative_input_layer.body.bottleneck3.expand.0.weight.npy')
ConvBiasPIn = None
ConvBiasNIn = None
ConvBiasVoltage=1
ConvPadding=0
InputValueIn= np.array(Conv_simulation(Conv_name,Conv_title, InputValueIn, ConvValuePIn, ConvValueNIn, ConvBiasVoltage,ConvPadding, ConvStride, ConvBiasPIn, ConvBiasNIn))
np.save('output_data/data33.npy', InputValueIn)
print(InputValueIn)


BN_name = 'BNOne'
BN_title= 'BNOne'
BNEXIn=np.load('data/body.bottleneck3.expand.1.running_mean.npy')
BNBiasVoltage=1
BNValueIn=np.load('data/body.bottleneck3.expand.1.running_var.npy')
BNWeightIn=np.load('data/positive_input_layer.body.bottleneck3.expand.1.a.npy')
BNBiasPIn=np.load('data/positive_input_layer.body.bottleneck3.expand.1.bias.npy')
BNBiasNIn=np.load('data/negative_input_layer.body.bottleneck3.expand.1.bias.npy')
InputValueIn= np.array(BN_simulation(BN_name,BN_title, InputValueIn, BNBiasVoltage,BNEXIn, BNWeightIn,BNValueIn,BNBiasPIn,BNBiasNIn))
np.save('output_data/data34.npy', InputValueIn)


hardswish_name='hardswish'
hardswish_title='hardswish'
InputValueIn= np.array(HardSwish_simulation(hardswish_name,hardswish_title, InputValueIn))
np.save('output_data/data35.npy', InputValueIn)


Conv_name = 'BottdwConv'
Conv_title= 'BottdwConv'
ConvValuePIn = np.load('data/positive_input_layer.body.bottleneck3.dw_conv.0.weight.npy')
ConvValueNIn = np.load('data/negative_input_layer.body.bottleneck3.dw_conv.0.weight.npy')
ConvPadding = 2
ConvStride = 2
InputValueIn= np.array(DwConv_simulation(Conv_name,Conv_title, InputValueIn, ConvValuePIn, ConvValueNIn, ConvPadding, ConvStride))
np.save('output_data/data36.npy', InputValueIn)

BN_name = 'BNOne'
BN_title= 'BNOne'
BNEXIn=np.load('data/body.bottleneck3.dw_conv.1.running_mean.npy')
BNBiasVoltage=1
BNValueIn=np.load('data/body.bottleneck3.dw_conv.1.running_var.npy')
BNWeightIn=np.load('data/positive_input_layer.body.bottleneck3.dw_conv.1.a.npy')
BNBiasPIn=np.load('data/positive_input_layer.body.bottleneck3.dw_conv.1.bias.npy')
BNBiasNIn=np.load('data/negative_input_layer.body.bottleneck3.dw_conv.1.bias.npy')
InputValueIn= np.array(BN_simulation(BN_name,BN_title, InputValueIn, BNBiasVoltage,BNEXIn, BNWeightIn,BNValueIn,BNBiasPIn,BNBiasNIn))
np.save('output_data/data37.npy', InputValueIn)


hardswish_name='hardswish'
hardswish_title='hardswish'
InputValueIn= np.array(HardSwish_simulation(hardswish_name,hardswish_title, InputValueIn))
np.save('output_data/data38.npy', InputValueIn)

GAPool_name='GAPoolOne'
GAPool_title='GAPoolOne'
InputValueIn= np.array(GloAvePooling_simulation(GAPool_name,GAPool_title, InputValueIn))
np.save('output_data/data39.npy', InputValueIn)

Conv_name = 'ConvOne'
Conv_title= 'ConvOne'
ConvBiasVoltage = 1
ConvStride = 1
ConvValuePIn = np.load('data/positive_input_layer.body.bottleneck3.se.reduce.weight.npy')
ConvValueNIn = np.load('data/negative_input_layer.body.bottleneck3.se.reduce.weight.npy')
ConvBiasPIn= np.load('data/positive_input_layer.body.bottleneck3.se.reduce.bias.npy')
ConvBiasNIn = np.load('data/negative_input_layer.body.bottleneck3.se.reduce.bias.npy')
InputValueIn= np.array(SAEConv_simulation(Conv_name,Conv_title, InputValueIn, ConvValuePIn, ConvValueNIn, ConvStride, ConvBiasPIn, ConvBiasNIn, ConvBiasVoltage))
np.save('output_data/data40.npy', InputValueIn)

ReLU_name='ReLUOnee'
ReLU_title='ReLUOnee'
InputValueIn= np.array(ReLU_simulation(ReLU_name,ReLU_title, InputValueIn))
np.save('output_data/data41.npy', InputValueIn)

Conv_name = 'ConvTwo'
Conv_title= 'ConvTwo'
ConvBiasVoltage = 1
ConvStride = 1
ConvValuePIn = np.load('data/positive_input_layer.body.bottleneck3.se.expand.weight.npy')
ConvValueNIn = np.load('data/negative_input_layer.body.bottleneck3.se.expand.weight.npy')
ConvBiasPIn= np.load('data/positive_input_layer.body.bottleneck3.se.expand.bias.npy')
ConvBiasNIn = np.load('data/negative_input_layer.body.bottleneck3.se.expand.bias.npy')
InputValueIn= np.array(SAEConv_simulation(Conv_name,Conv_title, InputValueIn, ConvValuePIn, ConvValueNIn, ConvStride, ConvBiasPIn, ConvBiasNIn, ConvBiasVoltage))
np.save('output_data/data42.npy', InputValueIn)

hardsigmoid_name='hardsigmoid'
hardsigmoid_title='hardsigmoid'
InputValueIn= np.array(HardSigmoid_simulation(hardsigmoid_name,hardsigmoid_title, InputValueIn))
np.save('output_data/data43.npy', InputValueIn)

InputValueInOne=np.load('output_data/data43.npy')
InputValueInTwo=np.load('output_data/data38.npy')
Multiply_name='Multiply'
Multiply_title='Multiply'
InputValueIn= np.array(Multiply_simulation(Multiply_name,Multiply_title, InputValueInOne,InputValueInTwo))
np.save('output_data/data44.npy', InputValueIn)

Conv_name = 'ConvOew'
Conv_title= 'ConvOew'
ConvStride = 1
ConvValuePIn = np.load('data/positive_input_layer.body.bottleneck3.contract.0.weight.npy')
ConvValueNIn = np.load('data/negative_input_layer.body.bottleneck3.contract.0.weight.npy')
ConvBiasPIn = None
ConvBiasNIn = None
ConvBiasVoltage=1
ConvPadding=0
InputValueIn= np.array(Conv_simulation(Conv_name,Conv_title, InputValueIn, ConvValuePIn, ConvValueNIn, ConvBiasVoltage,ConvPadding, ConvStride, ConvBiasPIn, ConvBiasNIn))
np.save('output_data/data45.npy', InputValueIn)

BN_name = 'BNBlock0Onew'
BN_title= 'BNBlock0Onew'
BNEXIn=np.load('data/body.bottleneck3.contract.1.running_mean.npy')
BNBiasVoltage=1
BNValueIn=np.load('data/body.bottleneck3.contract.1.running_var.npy')
BNWeightIn=np.load('data/positive_input_layer.body.bottleneck3.contract.1.a.npy')
BNBiasPIn=np.load('data/positive_input_layer.body.bottleneck3.contract.1.bias.npy')
BNBiasNIn=np.load('data/negative_input_layer.body.bottleneck3.contract.1.bias.npy')
InputValueIn= np.array(BN_simulation(BN_name,BN_title, InputValueIn, BNBiasVoltage,BNEXIn, BNWeightIn,BNValueIn,BNBiasPIn,BNBiasNIn))
np.save('output_data/data46.npy', InputValueIn)


Conv_name = 'ConvOne'
Conv_title= 'ConvOne'
ConvStride = 1
ConvValuePIn = np.load('data/positive_input_layer.body.bottleneck4.expand.0.weight.npy')
ConvValueNIn = np.load('data/negative_input_layer.body.bottleneck4.expand.0.weight.npy')
ConvBiasPIn = None
ConvBiasNIn = None
ConvBiasVoltage=1
ConvPadding=0
InputValueIn= np.array(Conv_simulation(Conv_name,Conv_title, InputValueIn, ConvValuePIn, ConvValueNIn, ConvBiasVoltage,ConvPadding, ConvStride, ConvBiasPIn, ConvBiasNIn))
np.save('output_data/data47.npy', InputValueIn)
print(InputValueIn.shape)

BN_name = 'BNOneq'
BN_title= 'BNOneq'
BNEXIn=np.load('data/body.bottleneck4.expand.1.running_mean.npy')
BNBiasVoltage=1
BNValueIn=np.load('data/body.bottleneck4.expand.1.running_var.npy')
BNWeightIn=np.load('data/positive_input_layer.body.bottleneck4.expand.1.a.npy')
BNBiasPIn=np.load('data/positive_input_layer.body.bottleneck4.expand.1.bias.npy')
BNBiasNIn=np.load('data/negative_input_layer.body.bottleneck4.expand.1.bias.npy')
InputValueIn= np.array(BN_simulation(BN_name,BN_title, InputValueIn, BNBiasVoltage,BNEXIn, BNWeightIn,BNValueIn,BNBiasPIn,BNBiasNIn))
np.save('output_data/data48.npy', InputValueIn)

hardswish_name='hardswish'
hardswish_title='hardswish'
InputValueIn= np.array(HardSwish_simulation(hardswish_name,hardswish_title, InputValueIn))
np.save('output_data/data49.npy', InputValueIn)


Conv_name = 'BottdwConv'
Conv_title= 'BottdwConv'
ConvValuePIn = np.load('data/positive_input_layer.body.bottleneck4.dw_conv.0.weight.npy')
ConvValueNIn = np.load('data/negative_input_layer.body.bottleneck4.dw_conv.0.weight.npy')
ConvPadding = 2
ConvStride = 1
InputValueIn= np.array(DwConv_simulation(Conv_name,Conv_title, InputValueIn, ConvValuePIn, ConvValueNIn, ConvPadding, ConvStride))
np.save('output_data/data50.npy', InputValueIn)

BN_name = 'BNOne'
BN_title= 'BNOne'
BNEXIn=np.load('data/body.bottleneck4.dw_conv.1.running_mean.npy')
BNBiasVoltage=1
BNValueIn=np.load('data/body.bottleneck4.dw_conv.1.running_var.npy')
BNWeightIn=np.load('data/positive_input_layer.body.bottleneck4.dw_conv.1.a.npy')
BNBiasPIn=np.load('data/positive_input_layer.body.bottleneck4.dw_conv.1.bias.npy')
BNBiasNIn=np.load('data/negative_input_layer.body.bottleneck4.dw_conv.1.bias.npy')
InputValueIn= np.array(BN_simulation(BN_name,BN_title, InputValueIn, BNBiasVoltage,BNEXIn, BNWeightIn,BNValueIn,BNBiasPIn,BNBiasNIn))
np.save('output_data/data51.npy', InputValueIn)

hardswish_name='hardswish'
hardswish_title='hardswish'
InputValueIn= np.array(HardSwish_simulation(hardswish_name,hardswish_title, InputValueIn))
np.save('output_data/data52.npy', InputValueIn)

InputValueIn=np.load('output_data/data52.npy')
GAPool_name='GAPoolOne'
GAPool_title='GAPoolOne'
InputValueIn= np.array(GloAvePooling_simulation(GAPool_name,GAPool_title, InputValueIn))
np.save('output_data/data53.npy', InputValueIn)

Conv_name = 'ConvOne'
Conv_title= 'ConvOne'
ConvBiasVoltage = 1
ConvStride = 1
ConvValuePIn = np.load('data/positive_input_layer.body.bottleneck4.se.reduce.weight.npy')
ConvValueNIn = np.load('data/negative_input_layer.body.bottleneck4.se.reduce.weight.npy')
ConvBiasPIn= np.load('data/positive_input_layer.body.bottleneck4.se.reduce.bias.npy')
ConvBiasNIn = np.load('data/negative_input_layer.body.bottleneck4.se.reduce.bias.npy')
InputValueIn= np.array(SAEConv_simulation(Conv_name,Conv_title, InputValueIn, ConvValuePIn, ConvValueNIn, ConvStride, ConvBiasPIn, ConvBiasNIn, ConvBiasVoltage))
np.save('output_data/data54.npy', InputValueIn)

ReLU_name='ReLUOne'
ReLU_title='ReLUOne'
InputValueIn= np.array(ReLU_simulation(ReLU_name,ReLU_title, InputValueIn))
np.save('output_data/data55.npy', InputValueIn)


Conv_name = 'ConvTwo'
Conv_title= 'ConvTwo'
InputValueIn=np.load('output_data/data55.npy')
ConvBiasVoltage = 1
ConvStride = 1
ConvValuePIn = np.load('data/positive_input_layer.body.bottleneck4.se.expand.weight.npy')
ConvValueNIn = np.load('data/negative_input_layer.body.bottleneck4.se.expand.weight.npy')
ConvBiasPIn= np.load('data/positive_input_layer.body.bottleneck4.se.expand.bias.npy')
ConvBiasNIn = np.load('data/negative_input_layer.body.bottleneck4.se.expand.bias.npy')
InputValueIn= np.array(SAEConv_simulation(Conv_name,Conv_title, InputValueIn, ConvValuePIn, ConvValueNIn, ConvStride, ConvBiasPIn, ConvBiasNIn, ConvBiasVoltage))
np.save('output_data/data56.npy', InputValueIn)

hardsigmoid_name='hardsigmoid'
hardsigmoid_title='hardsigmoid'
InputValueIn= np.array(HardSigmoid_simulation(hardsigmoid_name,hardsigmoid_title, InputValueIn))
np.save('output_data/data57.npy', InputValueIn)


InputValueInOne=np.load('output_data/data57.npy')
InputValueInTwo=np.load('output_data/data52.npy')
Multiply_name='Multiply'
Multiply_title='Multiply'
InputValueIn= np.array(Multiply_simulation(Multiply_name,Multiply_title, InputValueInOne,InputValueInTwo))
np.save('output_data/data58.npy', InputValueIn)

Conv_name = 'ConvOew'
Conv_title= 'ConvOew'
ConvStride = 1
ConvValuePIn = np.load('data/positive_input_layer.body.bottleneck4.contract.0.weight.npy')
ConvValueNIn = np.load('data/negative_input_layer.body.bottleneck4.contract.0.weight.npy')
ConvBiasPIn = None
ConvBiasNIn = None
ConvBiasVoltage=1
ConvPadding=0
InputValueIn= np.array(Conv_simulation(Conv_name,Conv_title, InputValueIn, ConvValuePIn, ConvValueNIn, ConvBiasVoltage,ConvPadding, ConvStride, ConvBiasPIn, ConvBiasNIn))
np.save('output_data/data59.npy', InputValueIn)

BN_name = 'BNBlock0Onew'
BN_title= 'BNBlock0Onew'
BNEXIn=np.load('data/body.bottleneck4.contract.1.running_mean.npy')
BNBiasVoltage=1
BNValueIn=np.load('data/body.bottleneck4.contract.1.running_var.npy')
BNWeightIn=np.load('data/positive_input_layer.body.bottleneck4.contract.1.a.npy')
BNBiasPIn=np.load('data/positive_input_layer.body.bottleneck4.contract.1.bias.npy')
BNBiasNIn=np.load('data/negative_input_layer.body.bottleneck4.contract.1.bias.npy')
InputValueIn= np.array(BN_simulation(BN_name,BN_title, InputValueIn, BNBiasVoltage,BNEXIn, BNWeightIn,BNValueIn,BNBiasPIn,BNBiasNIn))
np.save('output_data/data60.npy', InputValueIn)
print(InputValueIn)

InputValueInOne=np.load('output_data/data60.npy')
InputValueInTwo=np.load('output_data/data46.npy')
Add_name='BNBlock0One'
Add_title='BNBlock0One'
InputValueIn= np.array(Add_simulation(Add_name,Add_title, InputValueInOne,InputValueInTwo))
np.save('output_data/data61.npy', InputValueIn)
print(InputValueIn)


Conv_name = 'ConvOne'
Conv_title= 'ConvOne'
ConvStride = 1
ConvValuePIn = np.load('data/positive_input_layer.body.bottleneck5.expand.0.weight.npy')
ConvValueNIn = np.load('data/negative_input_layer.body.bottleneck5.expand.0.weight.npy')
ConvBiasPIn = None
ConvBiasNIn = None
ConvBiasVoltage=1
ConvPadding=0
InputValueIn= np.array(Conv_simulation(Conv_name,Conv_title, InputValueIn, ConvValuePIn, ConvValueNIn, ConvBiasVoltage,ConvPadding, ConvStride, ConvBiasPIn, ConvBiasNIn))
np.save('output_data/data62.npy', InputValueIn)

BN_name = 'BNOneq'
BN_title= 'BNOneq'
InputValueIn=np.load('output_data/data62.npy')
BNEXIn=np.load('data/body.bottleneck5.expand.1.running_mean.npy')
BNBiasVoltage=1
BNValueIn=np.load('data/body.bottleneck5.expand.1.running_var.npy')
BNWeightIn=np.load('data/positive_input_layer.body.bottleneck5.expand.1.a.npy')
BNBiasPIn=np.load('data/positive_input_layer.body.bottleneck5.expand.1.bias.npy')
BNBiasNIn=np.load('data/negative_input_layer.body.bottleneck5.expand.1.bias.npy')
InputValueIn= np.array(BN_simulation(BN_name,BN_title, InputValueIn, BNBiasVoltage,BNEXIn, BNWeightIn,BNValueIn,BNBiasPIn,BNBiasNIn))
np.save('output_data/data63.npy', InputValueIn)

hardswish_name='hardswish'
hardswish_title='hardswish'
InputValueIn= np.array(HardSwish_simulation(hardswish_name,hardswish_title, InputValueIn))
np.save('output_data/data64.npy', InputValueIn)

Conv_name = 'BottdwConv'
Conv_title= 'BottdwConv'
ConvValuePIn = np.load('data/positive_input_layer.body.bottleneck5.dw_conv.0.weight.npy')
ConvValueNIn = np.load('data/negative_input_layer.body.bottleneck5.dw_conv.0.weight.npy')
ConvPadding = 2
ConvStride = 1
InputValueIn= np.array(DwConv_simulation(Conv_name,Conv_title, InputValueIn, ConvValuePIn, ConvValueNIn, ConvPadding, ConvStride))
np.save('output_data/data65.npy', InputValueIn)

BN_name = 'BNOne'
BN_title= 'BNOne'
BNEXIn=np.load('data/body.bottleneck5.dw_conv.1.running_mean.npy')
BNBiasVoltage=1
BNValueIn=np.load('data/body.bottleneck5.dw_conv.1.running_var.npy')
BNWeightIn=np.load('data/positive_input_layer.body.bottleneck5.dw_conv.1.a.npy')
BNBiasPIn=np.load('data/positive_input_layer.body.bottleneck5.dw_conv.1.bias.npy')
BNBiasNIn=np.load('data/negative_input_layer.body.bottleneck5.dw_conv.1.bias.npy')
InputValueIn= np.array(BN_simulation(BN_name,BN_title, InputValueIn, BNBiasVoltage,BNEXIn, BNWeightIn,BNValueIn,BNBiasPIn,BNBiasNIn))
np.save('output_data/data66.npy', InputValueIn)

hardswish_name='hardswish'
hardswish_title='hardswish'
InputValueIn= np.array(HardSwish_simulation(hardswish_name,hardswish_title, InputValueIn))
np.save('output_data/data67.npy', InputValueIn)

GAPool_name='GAPoolOne'
GAPool_title='GAPoolOne'
InputValueIn= np.array(GloAvePooling_simulation(GAPool_name,GAPool_title, InputValueIn))
np.save('output_data/data68.npy', InputValueIn)

Conv_name = 'ConvOne'
Conv_title= 'ConvOne'
ConvBiasVoltage = 1
ConvStride = 1
ConvValuePIn = np.load('data/positive_input_layer.body.bottleneck5.se.reduce.weight.npy')
ConvValueNIn = np.load('data/negative_input_layer.body.bottleneck5.se.reduce.weight.npy')
ConvBiasPIn= np.load('data/positive_input_layer.body.bottleneck5.se.reduce.bias.npy')
ConvBiasNIn = np.load('data/negative_input_layer.body.bottleneck5.se.reduce.bias.npy')
InputValueIn= np.array(SAEConv_simulation(Conv_name,Conv_title, InputValueIn, ConvValuePIn, ConvValueNIn, ConvStride, ConvBiasPIn, ConvBiasNIn, ConvBiasVoltage))
np.save('output_data/data69.npy', InputValueIn)

ReLU_name='ReLUOne'
ReLU_title='ReLUOne'
InputValueIn= np.array(ReLU_simulation(ReLU_name,ReLU_title, InputValueIn))
np.save('output_data/data70.npy', InputValueIn)

Conv_name = 'ConvTwo'
Conv_title= 'ConvTwo'
ConvBiasVoltage = 1
ConvStride = 1
ConvValuePIn = np.load('data/positive_input_layer.body.bottleneck5.se.expand.weight.npy')
ConvValueNIn = np.load('data/negative_input_layer.body.bottleneck5.se.expand.weight.npy')
ConvBiasPIn= np.load('data/positive_input_layer.body.bottleneck5.se.expand.bias.npy')
ConvBiasNIn = np.load('data/negative_input_layer.body.bottleneck5.se.expand.bias.npy')
InputValueIn= np.array(SAEConv_simulation(Conv_name,Conv_title, InputValueIn, ConvValuePIn, ConvValueNIn, ConvStride, ConvBiasPIn, ConvBiasNIn, ConvBiasVoltage))
np.save('output_data/data71.npy', InputValueIn)

hardsigmoid_name='hardsigmoid'
hardsigmoid_title='hardsigmoid'
InputValueIn= np.array(HardSigmoid_simulation(hardsigmoid_name,hardsigmoid_title, InputValueIn))
np.save('output_data/data72.npy', InputValueIn)


InputValueInOne=np.load('output_data/data72.npy')
InputValueInTwo=np.load('output_data/data67.npy')
Multiply_name='Multiply'
Multiply_title='Multiply'
InputValueIn= np.array(Multiply_simulation(Multiply_name,Multiply_title, InputValueInOne,InputValueInTwo))
np.save('output_data/data73.npy', InputValueIn)


InputValueIn=np.load('output_data/data73.npy')
Conv_name = 'ConvOne'
Conv_title= 'ConvOne'
ConvStride = 1
ConvValuePIn = np.load('data/positive_input_layer.body.bottleneck5.contract.0.weight.npy')
ConvValueNIn = np.load('data/negative_input_layer.body.bottleneck5.contract.0.weight.npy')
ConvBiasPIn = None
ConvBiasNIn = None
ConvBiasVoltage=1
ConvPadding=0
InputValueIn= np.array(Conv_simulation(Conv_name,Conv_title, InputValueIn, ConvValuePIn, ConvValueNIn, ConvBiasVoltage,ConvPadding, ConvStride, ConvBiasPIn, ConvBiasNIn))
np.save('output_data/data74.npy', InputValueIn)

BN_name = 'BNBlock0One'
BN_title= 'BNBlock0One'
BNEXIn=np.load('data/body.bottleneck5.contract.1.running_mean.npy')
BNBiasVoltage=1
BNValueIn=np.load('data/body.bottleneck5.contract.1.running_var.npy')
BNWeightIn=np.load('data/positive_input_layer.body.bottleneck5.contract.1.a.npy')
BNBiasPIn=np.load('data/positive_input_layer.body.bottleneck5.contract.1.bias.npy')
BNBiasNIn=np.load('data/negative_input_layer.body.bottleneck5.contract.1.bias.npy')
InputValueIn= np.array(BN_simulation(BN_name,BN_title, InputValueIn, BNBiasVoltage,BNEXIn, BNWeightIn,BNValueIn,BNBiasPIn,BNBiasNIn))
np.save('output_data/data75.npy', InputValueIn)

InputValueInOne=np.load('output_data/data75.npy')
InputValueInTwo=np.load('output_data/data61.npy')
Add_name='BNBlock0One'
Add_title='BNBlock0One'
InputValueIn= np.array(Add_simulation(Add_name,Add_title, InputValueInOne,InputValueInTwo))
np.save('output_data/data76.npy', InputValueIn)


Conv_name = 'ConvOne'
Conv_title= 'ConvOne'
ConvStride = 1
ConvValuePIn = np.load('data/positive_input_layer.body.bottleneck6.expand.0.weight.npy')
ConvValueNIn = np.load('data/negative_input_layer.body.bottleneck6.expand.0.weight.npy')
ConvBiasPIn = None
ConvBiasNIn = None
ConvBiasVoltage=1
ConvPadding=0
InputValueIn= np.array(Conv_simulation(Conv_name,Conv_title, InputValueIn, ConvValuePIn, ConvValueNIn, ConvBiasVoltage,ConvPadding, ConvStride, ConvBiasPIn, ConvBiasNIn))
np.save('output_data/data77.npy', InputValueIn)

BN_name = 'BNOneq'
BN_title= 'BNOneq'
InputValueIn=np.load('output_data/data77.npy')
BNEXIn=np.load('data/body.bottleneck6.expand.1.running_mean.npy')
BNBiasVoltage=1
BNValueIn=np.load('data/body.bottleneck6.expand.1.running_var.npy')
BNWeightIn=np.load('data/positive_input_layer.body.bottleneck6.expand.1.a.npy')
BNBiasPIn=np.load('data/positive_input_layer.body.bottleneck6.expand.1.bias.npy')
BNBiasNIn=np.load('data/negative_input_layer.body.bottleneck6.expand.1.bias.npy')
InputValueIn= np.array(BN_simulation(BN_name,BN_title, InputValueIn, BNBiasVoltage,BNEXIn, BNWeightIn,BNValueIn,BNBiasPIn,BNBiasNIn))
np.save('output_data/data78.npy', InputValueIn)

hardswish_name='hardswish'
hardswish_title='hardswish'
InputValueIn= np.array(HardSwish_simulation(hardswish_name,hardswish_title, InputValueIn))
np.save('output_data/data79.npy', InputValueIn)

Conv_name = 'BottdwConv'
Conv_title= 'BottdwConv'
ConvValuePIn = np.load('data/positive_input_layer.body.bottleneck6.dw_conv.0.weight.npy')
ConvValueNIn = np.load('data/negative_input_layer.body.bottleneck6.dw_conv.0.weight.npy')
ConvPadding = 2
ConvStride = 1
InputValueIn= np.array(DwConv_simulation(Conv_name,Conv_title, InputValueIn, ConvValuePIn, ConvValueNIn, ConvPadding, ConvStride))
np.save('output_data/data80.npy', InputValueIn)

BN_name = 'BNOne'
BN_title= 'BNOne'
BNEXIn=np.load('data/body.bottleneck6.dw_conv.1.running_mean.npy')
BNBiasVoltage=1
BNValueIn=np.load('data/body.bottleneck6.dw_conv.1.running_var.npy')
BNWeightIn=np.load('data/positive_input_layer.body.bottleneck6.dw_conv.1.a.npy')
BNBiasPIn=np.load('data/positive_input_layer.body.bottleneck6.dw_conv.1.bias.npy')
BNBiasNIn=np.load('data/negative_input_layer.body.bottleneck6.dw_conv.1.bias.npy')
InputValueIn= np.array(BN_simulation(BN_name,BN_title, InputValueIn, BNBiasVoltage,BNEXIn, BNWeightIn,BNValueIn,BNBiasPIn,BNBiasNIn))
np.save('output_data/data81.npy', InputValueIn)

hardswish_name='hardswish'
hardswish_title='hardswish'
InputValueIn= np.array(HardSwish_simulation(hardswish_name,hardswish_title, InputValueIn))
np.save('output_data/data82.npy', InputValueIn)

GAPool_name='GAPoolOne'
GAPool_title='GAPoolOne'
InputValueIn= np.array(GloAvePooling_simulation(GAPool_name,GAPool_title, InputValueIn))
np.save('output_data/data83.npy', InputValueIn)
#
Conv_name = 'ConvOne'
Conv_title= 'ConvOne'
ConvBiasVoltage = 1
ConvStride = 1
ConvValuePIn = np.load('data/positive_input_layer.body.bottleneck6.se.reduce.weight.npy')
ConvValueNIn = np.load('data/negative_input_layer.body.bottleneck6.se.reduce.weight.npy')
ConvBiasPIn= np.load('data/positive_input_layer.body.bottleneck6.se.reduce.bias.npy')
ConvBiasNIn = np.load('data/negative_input_layer.body.bottleneck6.se.reduce.bias.npy')
InputValueIn= np.array(SAEConv_simulation(Conv_name,Conv_title, InputValueIn, ConvValuePIn, ConvValueNIn, ConvStride, ConvBiasPIn, ConvBiasNIn, ConvBiasVoltage))
np.save('output_data/data84.npy', InputValueIn)
#
ReLU_name='ReLUOne'
ReLU_title='ReLUOne'
InputValueIn= np.array(ReLU_simulation(ReLU_name,ReLU_title, InputValueIn))
np.save('output_data/data85.npy', InputValueIn)

Conv_name = 'ConvTwo'
Conv_title= 'ConvTwo'
ConvBiasVoltage = 1
ConvStride = 1
ConvValuePIn = np.load('data/positive_input_layer.body.bottleneck6.se.expand.weight.npy')
ConvValueNIn = np.load('data/negative_input_layer.body.bottleneck6.se.expand.weight.npy')
ConvBiasPIn= np.load('data/positive_input_layer.body.bottleneck6.se.expand.bias.npy')
ConvBiasNIn = np.load('data/negative_input_layer.body.bottleneck6.se.expand.bias.npy')
InputValueIn= np.array(SAEConv_simulation(Conv_name,Conv_title, InputValueIn, ConvValuePIn, ConvValueNIn, ConvStride, ConvBiasPIn, ConvBiasNIn, ConvBiasVoltage))
np.save('output_data/data86.npy', InputValueIn)

hardsigmoid_name='hardsigmoid'
hardsigmoid_title='hardsigmoid'
InputValueIn= np.array(HardSigmoid_simulation(hardsigmoid_name,hardsigmoid_title, InputValueIn))
np.save('output_data/data87.npy', InputValueIn)
#
InputValueInOne=np.load('output_data/data87.npy')
InputValueInTwo=np.load('output_data/data82.npy')
Multiply_name='Multiply'
Multiply_title='Multiply'
InputValueIn= np.array(Multiply_simulation(Multiply_name,Multiply_title, InputValueInOne,InputValueInTwo))
np.save('output_data/data88.npy', InputValueIn)


InputValueIn=np.load('output_data/data88.npy')
Conv_name = 'ConvOne'
Conv_title= 'ConvOne'
ConvStride = 1
ConvValuePIn = np.load('data/positive_input_layer.body.bottleneck6.contract.0.weight.npy')
ConvValueNIn = np.load('data/negative_input_layer.body.bottleneck6.contract.0.weight.npy')
ConvBiasPIn = None
ConvBiasNIn = None
ConvBiasVoltage=1
ConvPadding=0
InputValueIn= np.array(Conv_simulation(Conv_name,Conv_title, InputValueIn, ConvValuePIn, ConvValueNIn, ConvBiasVoltage,ConvPadding, ConvStride, ConvBiasPIn, ConvBiasNIn))
np.save('output_data/data89.npy', InputValueIn)

BN_name = 'BNBlock0One'
BN_title= 'BNBlock0One'
BNEXIn=np.load('data/body.bottleneck6.contract.1.running_mean.npy')
BNBiasVoltage=1
BNValueIn=np.load('data/body.bottleneck6.contract.1.running_var.npy')
BNWeightIn=np.load('data/positive_input_layer.body.bottleneck6.contract.1.a.npy')
BNBiasPIn=np.load('data/positive_input_layer.body.bottleneck6.contract.1.bias.npy')
BNBiasNIn=np.load('data/negative_input_layer.body.bottleneck6.contract.1.bias.npy')
InputValueIn= np.array(BN_simulation(BN_name,BN_title, InputValueIn, BNBiasVoltage,BNEXIn, BNWeightIn,BNValueIn,BNBiasPIn,BNBiasNIn))
np.save('output_data/data90.npy', InputValueIn)


InputValueIn=np.load('output_data/data90.npy')
Conv_name = 'ConvOne'
Conv_title= 'ConvOne'
ConvStride = 1
ConvValuePIn = np.load('data/positive_input_layer.body.bottleneck7.expand.0.weight.npy')
ConvValueNIn = np.load('data/negative_input_layer.body.bottleneck7.expand.0.weight.npy')
ConvBiasPIn = None
ConvBiasNIn = None
ConvBiasVoltage=1
ConvPadding=0
InputValueIn= np.array(Conv_simulation(Conv_name,Conv_title, InputValueIn, ConvValuePIn, ConvValueNIn, ConvBiasVoltage,ConvPadding, ConvStride, ConvBiasPIn, ConvBiasNIn))
np.save('output_data/data91.npy', InputValueIn)

BN_name = 'BNOneq'
BN_title= 'BNOneq'
BNEXIn=np.load('data/body.bottleneck7.expand.1.running_mean.npy')
BNBiasVoltage=1
BNValueIn=np.load('data/body.bottleneck7.expand.1.running_var.npy')
BNWeightIn=np.load('data/positive_input_layer.body.bottleneck7.expand.1.a.npy')
BNBiasPIn=np.load('data/positive_input_layer.body.bottleneck7.expand.1.bias.npy')
BNBiasNIn=np.load('data/negative_input_layer.body.bottleneck7.expand.1.bias.npy')
InputValueIn= np.array(BN_simulation(BN_name,BN_title, InputValueIn, BNBiasVoltage,BNEXIn, BNWeightIn,BNValueIn,BNBiasPIn,BNBiasNIn))
np.save('output_data/data92.npy', InputValueIn)

hardswish_name='hardswish'
hardswish_title='hardswish'
InputValueIn= np.array(HardSwish_simulation(hardswish_name,hardswish_title, InputValueIn))
np.save('output_data/data93.npy', InputValueIn)

Conv_name = 'BottdwConv'
Conv_title= 'BottdwConv'
ConvValuePIn = np.load('data/positive_input_layer.body.bottleneck7.dw_conv.0.weight.npy')
ConvValueNIn = np.load('data/negative_input_layer.body.bottleneck7.dw_conv.0.weight.npy')
ConvPadding = 2
ConvStride = 1
InputValueIn= np.array(DwConv_simulation(Conv_name,Conv_title, InputValueIn, ConvValuePIn, ConvValueNIn, ConvPadding, ConvStride))
np.save('output_data/data94.npy', InputValueIn)
#
BN_name = 'BNOne'
BN_title= 'BNOne'
BNEXIn=np.load('data/body.bottleneck7.dw_conv.1.running_mean.npy')
BNBiasVoltage=1
BNValueIn=np.load('data/body.bottleneck7.dw_conv.1.running_var.npy')
BNWeightIn=np.load('data/positive_input_layer.body.bottleneck7.dw_conv.1.a.npy')
BNBiasPIn=np.load('data/positive_input_layer.body.bottleneck7.dw_conv.1.bias.npy')
BNBiasNIn=np.load('data/negative_input_layer.body.bottleneck7.dw_conv.1.bias.npy')
InputValueIn= np.array(BN_simulation(BN_name,BN_title, InputValueIn, BNBiasVoltage,BNEXIn, BNWeightIn,BNValueIn,BNBiasPIn,BNBiasNIn))
np.save('output_data/data95.npy', InputValueIn)

hardswish_name='hardswish'
hardswish_title='hardswish'
InputValueIn= np.array(HardSwish_simulation(hardswish_name,hardswish_title, InputValueIn))
np.save('output_data/data96.npy', InputValueIn)

InputValueIn=np.load('output_data/data96.npy')
GAPool_name='GAPoolOne'
GAPool_title='GAPoolOne'
InputValueIn= np.array(GloAvePooling_simulation(GAPool_name,GAPool_title, InputValueIn))
np.save('output_data/data97.npy', InputValueIn)

Conv_name = 'ConvOne'
Conv_title= 'ConvOne'
ConvBiasVoltage = 1
ConvStride = 1
ConvValuePIn = np.load('data/positive_input_layer.body.bottleneck7.se.reduce.weight.npy')
ConvValueNIn = np.load('data/negative_input_layer.body.bottleneck7.se.reduce.weight.npy')
ConvBiasPIn= np.load('data/positive_input_layer.body.bottleneck7.se.reduce.bias.npy')
ConvBiasNIn = np.load('data/negative_input_layer.body.bottleneck7.se.reduce.bias.npy')
InputValueIn= np.array(SAEConv_simulation(Conv_name,Conv_title, InputValueIn, ConvValuePIn, ConvValueNIn, ConvStride, ConvBiasPIn, ConvBiasNIn, ConvBiasVoltage))
np.save('output_data/data98.npy', InputValueIn)
# #
ReLU_name='ReLUOne'
ReLU_title='ReLUOne'
InputValueIn= np.array(ReLU_simulation(ReLU_name,ReLU_title, InputValueIn))
np.save('output_data/data99.npy', InputValueIn)
#
Conv_name = 'ConvTwo'
Conv_title= 'ConvTwo'
ConvBiasVoltage = 1
ConvStride = 1
ConvValuePIn = np.load('data/positive_input_layer.body.bottleneck7.se.expand.weight.npy')
ConvValueNIn = np.load('data/negative_input_layer.body.bottleneck7.se.expand.weight.npy')
ConvBiasPIn= np.load('data/positive_input_layer.body.bottleneck7.se.expand.bias.npy')
ConvBiasNIn = np.load('data/negative_input_layer.body.bottleneck7.se.expand.bias.npy')
InputValueIn= np.array(SAEConv_simulation(Conv_name,Conv_title, InputValueIn, ConvValuePIn, ConvValueNIn, ConvStride, ConvBiasPIn, ConvBiasNIn, ConvBiasVoltage))
np.save('output_data/data100.npy', InputValueIn)

hardsigmoid_name='hardsigmoid'
hardsigmoid_title='hardsigmoid'
InputValueIn= np.array(HardSigmoid_simulation(hardsigmoid_name,hardsigmoid_title, InputValueIn))
np.save('output_data/data101.npy', InputValueIn)

InputValueInOne=np.load('output_data/data101.npy')
InputValueInTwo=np.load('output_data/data96.npy')
Multiply_name='Multiply'
Multiply_title='Multiply'
InputValueIn= np.array(Multiply_simulation(Multiply_name,Multiply_title, InputValueInOne,InputValueInTwo))
np.save('output_data/data102.npy', InputValueIn)

InputValueIn=np.load('output_data/data102.npy')
Conv_name = 'ConvOne'
Conv_title= 'ConvOne'
ConvStride = 1
ConvValuePIn = np.load('data/positive_input_layer.body.bottleneck7.contract.0.weight.npy')
ConvValueNIn = np.load('data/negative_input_layer.body.bottleneck7.contract.0.weight.npy')
ConvBiasPIn = None
ConvBiasNIn = None
ConvBiasVoltage=1
ConvPadding=0
InputValueIn= np.array(Conv_simulation(Conv_name,Conv_title, InputValueIn, ConvValuePIn, ConvValueNIn, ConvBiasVoltage,ConvPadding, ConvStride, ConvBiasPIn, ConvBiasNIn))
np.save('output_data/data103.npy', InputValueIn)

BN_name = 'BNBlock0One'
BN_title= 'BNBlock0One'
BNEXIn=np.load('data/body.bottleneck7.contract.1.running_mean.npy')
BNBiasVoltage=1
BNValueIn=np.load('data/body.bottleneck7.contract.1.running_var.npy')
BNWeightIn=np.load('data/positive_input_layer.body.bottleneck7.contract.1.a.npy')
BNBiasPIn=np.load('data/positive_input_layer.body.bottleneck7.contract.1.bias.npy')
BNBiasNIn=np.load('data/negative_input_layer.body.bottleneck7.contract.1.bias.npy')
InputValueIn= np.array(BN_simulation(BN_name,BN_title, InputValueIn, BNBiasVoltage,BNEXIn, BNWeightIn,BNValueIn,BNBiasPIn,BNBiasNIn))
np.save('output_data/data104.npy', InputValueIn)

InputValueInOne=np.load('output_data/data104.npy')
InputValueInTwo=np.load('output_data/data90.npy')
Add_name='BNBlock0One'
Add_title='BNBlock0One'
InputValueIn= np.array(Add_simulation(Add_name,Add_title, InputValueInOne,InputValueInTwo))
np.save('output_data/data105.npy', InputValueIn)

Conv_name = 'ConvOne'
Conv_title= 'ConvOne'
ConvStride = 1
ConvValuePIn = np.load('data/positive_input_layer.body.bottleneck8.expand.0.weight.npy')
ConvValueNIn = np.load('data/negative_input_layer.body.bottleneck8.expand.0.weight.npy')
ConvBiasPIn = None
ConvBiasNIn = None
ConvBiasVoltage=1
ConvPadding=0
InputValueIn= np.array(Conv_simulation(Conv_name,Conv_title, InputValueIn, ConvValuePIn, ConvValueNIn, ConvBiasVoltage,ConvPadding, ConvStride, ConvBiasPIn, ConvBiasNIn))
np.save('output_data/data106.npy', InputValueIn)

BN_name = 'BNOneq'
BN_title= 'BNOneq'
BNEXIn=np.load('data/body.bottleneck8.expand.1.running_mean.npy')
BNBiasVoltage=1
BNValueIn=np.load('data/body.bottleneck8.expand.1.running_var.npy')
BNWeightIn=np.load('data/positive_input_layer.body.bottleneck8.expand.1.a.npy')
BNBiasPIn=np.load('data/positive_input_layer.body.bottleneck8.expand.1.bias.npy')
BNBiasNIn=np.load('data/negative_input_layer.body.bottleneck8.expand.1.bias.npy')
InputValueIn= np.array(BN_simulation(BN_name,BN_title, InputValueIn, BNBiasVoltage,BNEXIn, BNWeightIn,BNValueIn,BNBiasPIn,BNBiasNIn))
np.save('output_data/data107.npy', InputValueIn)

hardswish_name='hardswish'
hardswish_title='hardswish'
InputValueIn= np.array(HardSwish_simulation(hardswish_name,hardswish_title, InputValueIn))
np.save('output_data/data108.npy', InputValueIn)


Conv_name = 'BottdwConv'
Conv_title= 'BottdwConv'
ConvValuePIn = np.load('data/positive_input_layer.body.bottleneck8.dw_conv.0.weight.npy')
ConvValueNIn = np.load('data/negative_input_layer.body.bottleneck8.dw_conv.0.weight.npy')
ConvPadding = 2
ConvStride = 2
InputValueIn= np.array(DwConv_simulation(Conv_name,Conv_title, InputValueIn, ConvValuePIn, ConvValueNIn, ConvPadding, ConvStride))
np.save('output_data/data109.npy', InputValueIn)

BN_name = 'BNOne'
BN_title= 'BNOne'
BNEXIn=np.load('data/body.bottleneck8.dw_conv.1.running_mean.npy')
BNBiasVoltage=1
BNValueIn=np.load('data/body.bottleneck8.dw_conv.1.running_var.npy')
BNWeightIn=np.load('data/positive_input_layer.body.bottleneck8.dw_conv.1.a.npy')
BNBiasPIn=np.load('data/positive_input_layer.body.bottleneck8.dw_conv.1.bias.npy')
BNBiasNIn=np.load('data/negative_input_layer.body.bottleneck8.dw_conv.1.bias.npy')
InputValueIn= np.array(BN_simulation(BN_name,BN_title, InputValueIn, BNBiasVoltage,BNEXIn, BNWeightIn,BNValueIn,BNBiasPIn,BNBiasNIn))
np.save('output_data/data110.npy', InputValueIn)

hardswish_name='hardswish'
hardswish_title='hardswish'
InputValueIn= np.array(HardSwish_simulation(hardswish_name,hardswish_title, InputValueIn))
np.save('output_data/data111.npy', InputValueIn)

GAPool_name='GAPoolOne'
GAPool_title='GAPoolOne'
InputValueIn= np.array(GloAvePooling_simulation(GAPool_name,GAPool_title, InputValueIn))
np.save('output_data/data112.npy', InputValueIn)

Conv_name = 'ConvOne'
Conv_title= 'ConvOne'
ConvBiasVoltage = 1
ConvStride = 1
ConvValuePIn = np.load('data/positive_input_layer.body.bottleneck8.se.reduce.weight.npy')
ConvValueNIn = np.load('data/negative_input_layer.body.bottleneck8.se.reduce.weight.npy')
ConvBiasPIn= np.load('data/positive_input_layer.body.bottleneck8.se.reduce.bias.npy')
ConvBiasNIn = np.load('data/negative_input_layer.body.bottleneck8.se.reduce.bias.npy')
InputValueIn= np.array(SAEConv_simulation(Conv_name,Conv_title, InputValueIn, ConvValuePIn, ConvValueNIn, ConvStride, ConvBiasPIn, ConvBiasNIn, ConvBiasVoltage))
np.save('output_data/data113.npy', InputValueIn)
# #
ReLU_name='ReLUOne'
ReLU_title='ReLUOne'
InputValueIn= np.array(ReLU_simulation(ReLU_name,ReLU_title, InputValueIn))
np.save('output_data/data114.npy', InputValueIn)
#
Conv_name = 'ConvTwo'
Conv_title= 'ConvTwo'
ConvBiasVoltage = 1
ConvStride = 1
ConvValuePIn = np.load('data/positive_input_layer.body.bottleneck8.se.expand.weight.npy')
ConvValueNIn = np.load('data/negative_input_layer.body.bottleneck8.se.expand.weight.npy')
ConvBiasPIn= np.load('data/positive_input_layer.body.bottleneck8.se.expand.bias.npy')
ConvBiasNIn = np.load('data/negative_input_layer.body.bottleneck8.se.expand.bias.npy')
InputValueIn= np.array(SAEConv_simulation(Conv_name,Conv_title, InputValueIn, ConvValuePIn, ConvValueNIn, ConvStride, ConvBiasPIn, ConvBiasNIn, ConvBiasVoltage))
np.save('output_data/data115.npy', InputValueIn)

hardsigmoid_name='hardsigmoid'
hardsigmoid_title='hardsigmoid'
InputValueIn= np.array(HardSigmoid_simulation(hardsigmoid_name,hardsigmoid_title, InputValueIn))
np.save('output_data/data116.npy', InputValueIn)

InputValueInOne=np.load('output_data/data116.npy')
InputValueInTwo=np.load('output_data/data111.npy')
Multiply_name='Multiply'
Multiply_title='Multiply'
InputValueIn= np.array(Multiply_simulation(Multiply_name,Multiply_title, InputValueInOne,InputValueInTwo))
np.save('output_data/data117.npy', InputValueIn)

InputValueIn=np.load('output_data/data117.npy')
Conv_name = 'ConvOne'
Conv_title= 'ConvOne'
ConvStride = 1
ConvValuePIn = np.load('data/positive_input_layer.body.bottleneck8.contract.0.weight.npy')
ConvValueNIn = np.load('data/negative_input_layer.body.bottleneck8.contract.0.weight.npy')
ConvBiasPIn = None
ConvBiasNIn = None
ConvBiasVoltage=1
ConvPadding=0
InputValueIn= np.array(Conv_simulation(Conv_name,Conv_title, InputValueIn, ConvValuePIn, ConvValueNIn, ConvBiasVoltage,ConvPadding, ConvStride, ConvBiasPIn, ConvBiasNIn))
np.save('output_data/data118.npy', InputValueIn)


InputValueIn=np.load('output_data/data118.npy')
BN_name = 'BNBlock0One'
BN_title= 'BNBlock0One'
BNEXIn=np.load('data/body.bottleneck8.contract.1.running_mean.npy')
BNBiasVoltage=1
BNValueIn=np.load('data/body.bottleneck8.contract.1.running_var.npy')
BNWeightIn=np.load('data/positive_input_layer.body.bottleneck8.contract.1.a.npy')
BNBiasPIn=np.load('data/positive_input_layer.body.bottleneck8.contract.1.bias.npy')
BNBiasNIn=np.load('data/negative_input_layer.body.bottleneck8.contract.1.bias.npy')
InputValueIn= np.array(BN_simulation(BN_name,BN_title, InputValueIn, BNBiasVoltage,BNEXIn, BNWeightIn,BNValueIn,BNBiasPIn,BNBiasNIn))
np.save('output_data/data119.npy', InputValueIn)
print(InputValueIn)

InputValueIn=np.load('output_data/data119.npy')
Conv_name = 'ConvOne'
Conv_title= 'ConvOne'
ConvStride = 1
ConvValuePIn = np.load('data/positive_input_layer.body.bottleneck9.expand.0.weight.npy')
ConvValueNIn = np.load('data/negative_input_layer.body.bottleneck9.expand.0.weight.npy')
ConvBiasPIn = None
ConvBiasNIn = None
ConvBiasVoltage=1
ConvPadding=0
InputValueIn= np.array(Conv_simulation(Conv_name,Conv_title, InputValueIn, ConvValuePIn, ConvValueNIn, ConvBiasVoltage,ConvPadding, ConvStride, ConvBiasPIn, ConvBiasNIn))
np.save('output_data/data120.npy', InputValueIn)

BN_name = 'BNOneq'
BN_title= 'BNOneq'
BNEXIn=np.load('data/body.bottleneck9.expand.1.running_mean.npy')
BNBiasVoltage=1
BNValueIn=np.load('data/body.bottleneck9.expand.1.running_var.npy')
BNWeightIn=np.load('data/positive_input_layer.body.bottleneck9.expand.1.a.npy')
BNBiasPIn=np.load('data/positive_input_layer.body.bottleneck9.expand.1.bias.npy')
BNBiasNIn=np.load('data/negative_input_layer.body.bottleneck9.expand.1.bias.npy')
InputValueIn= np.array(BN_simulation(BN_name,BN_title, InputValueIn, BNBiasVoltage,BNEXIn, BNWeightIn,BNValueIn,BNBiasPIn,BNBiasNIn))
np.save('output_data/data121.npy', InputValueIn)

hardswish_name='hardswish'
hardswish_title='hardswish'
InputValueIn= np.array(HardSwish_simulation(hardswish_name,hardswish_title, InputValueIn))
np.save('output_data/data122.npy', InputValueIn)


Conv_name = 'BottdwConv'
Conv_title= 'BottdwConv'
ConvValuePIn = np.load('data/positive_input_layer.body.bottleneck9.dw_conv.0.weight.npy')
ConvValueNIn = np.load('data/negative_input_layer.body.bottleneck9.dw_conv.0.weight.npy')
ConvPadding = 2
ConvStride = 1
InputValueIn= np.array(DwConv_simulation(Conv_name,Conv_title, InputValueIn, ConvValuePIn, ConvValueNIn, ConvPadding, ConvStride))
np.save('output_data/data123.npy', InputValueIn)

BN_name = 'BNOne'
BN_title= 'BNOne'
BNEXIn=np.load('data/body.bottleneck9.dw_conv.1.running_mean.npy')
BNBiasVoltage=1
BNValueIn=np.load('data/body.bottleneck9.dw_conv.1.running_var.npy')
BNWeightIn=np.load('data/positive_input_layer.body.bottleneck9.dw_conv.1.a.npy')
BNBiasPIn=np.load('data/positive_input_layer.body.bottleneck9.dw_conv.1.bias.npy')
BNBiasNIn=np.load('data/negative_input_layer.body.bottleneck9.dw_conv.1.bias.npy')
InputValueIn= np.array(BN_simulation(BN_name,BN_title, InputValueIn, BNBiasVoltage,BNEXIn, BNWeightIn,BNValueIn,BNBiasPIn,BNBiasNIn))
np.save('output_data/data124.npy', InputValueIn)

hardswish_name='hardswish'
hardswish_title='hardswish'
InputValueIn= np.array(HardSwish_simulation(hardswish_name,hardswish_title, InputValueIn))
np.save('output_data/data125.npy', InputValueIn)


GAPool_name='GAPoolOne'
GAPool_title='GAPoolOne'
InputValueIn= np.array(GloAvePooling_simulation(GAPool_name,GAPool_title, InputValueIn))
np.save('output_data/data126.npy', InputValueIn)

Conv_name = 'ConvOne'
Conv_title= 'ConvOne'
ConvBiasVoltage = 1
ConvStride = 1
ConvValuePIn = np.load('data/positive_input_layer.body.bottleneck9.se.reduce.weight.npy')
ConvValueNIn = np.load('data/negative_input_layer.body.bottleneck9.se.reduce.weight.npy')
ConvBiasPIn= np.load('data/positive_input_layer.body.bottleneck9.se.reduce.bias.npy')
ConvBiasNIn = np.load('data/negative_input_layer.body.bottleneck9.se.reduce.bias.npy')
InputValueIn= np.array(SAEConv_simulation(Conv_name,Conv_title, InputValueIn, ConvValuePIn, ConvValueNIn, ConvStride, ConvBiasPIn, ConvBiasNIn, ConvBiasVoltage))
np.save('output_data/data127.npy', InputValueIn)

ReLU_name='ReLUOne'
ReLU_title='ReLUOne'
InputValueIn= np.array(ReLU_simulation(ReLU_name,ReLU_title, InputValueIn))
np.save('output_data/data128.npy', InputValueIn)

Conv_name = 'ConvTwo'
Conv_title= 'ConvTwo'
ConvBiasVoltage = 1
ConvStride = 1
ConvValuePIn = np.load('data/positive_input_layer.body.bottleneck9.se.expand.weight.npy')
ConvValueNIn = np.load('data/negative_input_layer.body.bottleneck9.se.expand.weight.npy')
ConvBiasPIn= np.load('data/positive_input_layer.body.bottleneck9.se.expand.bias.npy')
ConvBiasNIn = np.load('data/negative_input_layer.body.bottleneck9.se.expand.bias.npy')
InputValueIn= np.array(SAEConv_simulation(Conv_name,Conv_title, InputValueIn, ConvValuePIn, ConvValueNIn, ConvStride, ConvBiasPIn, ConvBiasNIn, ConvBiasVoltage))
np.save('output_data/data129.npy', InputValueIn)

hardsigmoid_name='hardsigmoid'
hardsigmoid_title='hardsigmoid'
InputValueIn= np.array(HardSigmoid_simulation(hardsigmoid_name,hardsigmoid_title, InputValueIn))
np.save('output_data/data130.npy', InputValueIn)

InputValueInOne=np.load('output_data/data130.npy')
InputValueInTwo=np.load('output_data/data125.npy')
Multiply_name='Multiply'
Multiply_title='Multiply'
InputValueIn= np.array(Multiply_simulation(Multiply_name,Multiply_title, InputValueInOne,InputValueInTwo))
np.save('output_data/data131.npy', InputValueIn)


Conv_name = 'ConvOne'
Conv_title= 'ConvOne'
ConvStride = 1
ConvValuePIn = np.load('data/positive_input_layer.body.bottleneck9.contract.0.weight.npy')
ConvValueNIn = np.load('data/negative_input_layer.body.bottleneck9.contract.0.weight.npy')
ConvBiasPIn = None
ConvBiasNIn = None
ConvBiasVoltage=1
ConvPadding=0
InputValueIn= np.array(Conv_simulation(Conv_name,Conv_title, InputValueIn, ConvValuePIn, ConvValueNIn, ConvBiasVoltage,ConvPadding, ConvStride, ConvBiasPIn, ConvBiasNIn))
np.save('output_data/data132.npy', InputValueIn)

BN_name = 'BNBlock0One'
BN_title= 'BNBlock0One'
BNEXIn=np.load('data/body.bottleneck9.contract.1.running_mean.npy')
BNBiasVoltage=1
BNValueIn=np.load('data/body.bottleneck9.contract.1.running_var.npy')
BNWeightIn=np.load('data/positive_input_layer.body.bottleneck9.contract.1.a.npy')
BNBiasPIn=np.load('data/positive_input_layer.body.bottleneck9.contract.1.bias.npy')
BNBiasNIn=np.load('data/negative_input_layer.body.bottleneck9.contract.1.bias.npy')
InputValueIn= np.array(BN_simulation(BN_name,BN_title, InputValueIn, BNBiasVoltage,BNEXIn, BNWeightIn,BNValueIn,BNBiasPIn,BNBiasNIn))
np.save('output_data/data133.npy', InputValueIn)

InputValueInOne=np.load('output_data/data133.npy')
InputValueInTwo=np.load('output_data/data119.npy')
Add_name='BNBlock0One'
Add_title='BNBlock0One'
InputValueIn= np.array(Add_simulation(Add_name,Add_title, InputValueInOne,InputValueInTwo))
np.save('output_data/data134.npy', InputValueIn)
print(InputValueIn)

InputValueIn=np.load('output_data/data134.npy')
Conv_name = 'ConvOne'
Conv_title= 'ConvOne'
ConvStride = 1
ConvValuePIn = np.load('data/positive_input_layer.body.bottleneck10.expand.0.weight.npy')
ConvValueNIn = np.load('data/negative_input_layer.body.bottleneck10.expand.0.weight.npy')
ConvBiasPIn = None
ConvBiasNIn = None
ConvBiasVoltage=1
ConvPadding=0
InputValueIn= np.array(Conv_simulation(Conv_name,Conv_title, InputValueIn, ConvValuePIn, ConvValueNIn, ConvBiasVoltage,ConvPadding, ConvStride, ConvBiasPIn, ConvBiasNIn))
np.save('output_data/data135.npy', InputValueIn)

BN_name = 'BNOneq'
BN_title= 'BNOneq'
BNEXIn=np.load('data/body.bottleneck10.expand.1.running_mean.npy')
BNBiasVoltage=1
BNValueIn=np.load('data/body.bottleneck10.expand.1.running_var.npy')
BNWeightIn=np.load('data/positive_input_layer.body.bottleneck10.expand.1.a.npy')
BNBiasPIn=np.load('data/positive_input_layer.body.bottleneck10.expand.1.bias.npy')
BNBiasNIn=np.load('data/negative_input_layer.body.bottleneck10.expand.1.bias.npy')
InputValueIn= np.array(BN_simulation(BN_name,BN_title, InputValueIn, BNBiasVoltage,BNEXIn, BNWeightIn,BNValueIn,BNBiasPIn,BNBiasNIn))
np.save('output_data/data136.npy', InputValueIn)

hardswish_name='hardswish'
hardswish_title='hardswish'
InputValueIn= np.array(HardSwish_simulation(hardswish_name,hardswish_title, InputValueIn))
np.save('output_data/data137.npy', InputValueIn)

Conv_name = 'BottdwConv'
Conv_title= 'BottdwConv'
ConvValuePIn = np.load('data/positive_input_layer.body.bottleneck10.dw_conv.0.weight.npy')
ConvValueNIn = np.load('data/negative_input_layer.body.bottleneck10.dw_conv.0.weight.npy')
ConvPadding = 2
ConvStride = 1
InputValueIn= np.array(DwConv_simulation(Conv_name,Conv_title, InputValueIn, ConvValuePIn, ConvValueNIn, ConvPadding, ConvStride))
np.save('output_data/data138.npy', InputValueIn)

BN_name = 'BNOne'
BN_title= 'BNOne'
BNEXIn=np.load('data/body.bottleneck10.dw_conv.1.running_mean.npy')
BNBiasVoltage=1
BNValueIn=np.load('data/body.bottleneck10.dw_conv.1.running_var.npy')
BNWeightIn=np.load('data/positive_input_layer.body.bottleneck10.dw_conv.1.a.npy')
BNBiasPIn=np.load('data/positive_input_layer.body.bottleneck10.dw_conv.1.bias.npy')
BNBiasNIn=np.load('data/negative_input_layer.body.bottleneck10.dw_conv.1.bias.npy')
InputValueIn= np.array(BN_simulation(BN_name,BN_title, InputValueIn, BNBiasVoltage,BNEXIn, BNWeightIn,BNValueIn,BNBiasPIn,BNBiasNIn))
np.save('output_data/data139.npy', InputValueIn)

hardswish_name='hardswish'
hardswish_title='hardswish'
InputValueIn= np.array(HardSwish_simulation(hardswish_name,hardswish_title, InputValueIn))
np.save('output_data/data140.npy', InputValueIn)



GAPool_name='GAPoolOne'
GAPool_title='GAPoolOne'
InputValueIn= np.array(GloAvePooling_simulation(GAPool_name,GAPool_title, InputValueIn))
np.save('output_data/data141.npy', InputValueIn)

Conv_name = 'ConvOne'
Conv_title= 'ConvOne'
ConvBiasVoltage = 1
ConvStride = 1
ConvValuePIn = np.load('data/positive_input_layer.body.bottleneck10.se.reduce.weight.npy')
ConvValueNIn = np.load('data/negative_input_layer.body.bottleneck10.se.reduce.weight.npy')
ConvBiasPIn= np.load('data/positive_input_layer.body.bottleneck10.se.reduce.bias.npy')
ConvBiasNIn = np.load('data/negative_input_layer.body.bottleneck10.se.reduce.bias.npy')
InputValueIn= np.array(SAEConv_simulation(Conv_name,Conv_title, InputValueIn, ConvValuePIn, ConvValueNIn, ConvStride, ConvBiasPIn, ConvBiasNIn, ConvBiasVoltage))
np.save('output_data/data142.npy', InputValueIn)

ReLU_name='ReLUOne'
ReLU_title='ReLUOne'
InputValueIn= np.array(ReLU_simulation(ReLU_name,ReLU_title, InputValueIn))
np.save('output_data/data143.npy', InputValueIn)

Conv_name = 'ConvTwo'
Conv_title= 'ConvTwo'
ConvBiasVoltage = 1
ConvStride = 1
ConvValuePIn = np.load('data/positive_input_layer.body.bottleneck10.se.expand.weight.npy')
ConvValueNIn = np.load('data/negative_input_layer.body.bottleneck10.se.expand.weight.npy')
ConvBiasPIn= np.load('data/positive_input_layer.body.bottleneck10.se.expand.bias.npy')
ConvBiasNIn = np.load('data/negative_input_layer.body.bottleneck10.se.expand.bias.npy')
InputValueIn= np.array(SAEConv_simulation(Conv_name,Conv_title, InputValueIn, ConvValuePIn, ConvValueNIn, ConvStride, ConvBiasPIn, ConvBiasNIn, ConvBiasVoltage))
np.save('output_data/data144.npy', InputValueIn)

hardsigmoid_name='hardsigmoid'
hardsigmoid_title='hardsigmoid'
InputValueIn= np.array(HardSigmoid_simulation(hardsigmoid_name,hardsigmoid_title, InputValueIn))
np.save('output_data/data145.npy', InputValueIn)




InputValueInOne=np.load('output_data/data145.npy')
InputValueInTwo=np.load('output_data/data140.npy')
Multiply_name='Multiply'
Multiply_title='Multiply'
InputValueIn= np.array(Multiply_simulation(Multiply_name,Multiply_title, InputValueInOne,InputValueInTwo))
np.save('output_data/data146.npy', InputValueIn)

InputValueIn=np.load('output_data/data146.npy')
print(InputValueIn.shape)
InputValueIn=np.load('output_data/data147.npy')
print(InputValueIn.shape)
Conv_name = 'ConvOne'
Conv_title= 'ConvOne'
ConvStride = 1
ConvValuePIn = np.load('data/positive_input_layer.body.bottleneck10.contract.0.weight.npy')
ConvValueNIn = np.load('data/negative_input_layer.body.bottleneck10.contract.0.weight.npy')
ConvBiasPIn = None
ConvBiasNIn = None
ConvBiasVoltage=1
ConvPadding=0
InputValueIn= np.array(Conv_simulation(Conv_name,Conv_title, InputValueIn, ConvValuePIn, ConvValueNIn, ConvBiasVoltage,ConvPadding, ConvStride, ConvBiasPIn, ConvBiasNIn))
np.save('output_data/data147.npy', InputValueIn)

InputValueIn=np.load('output_data/data147.npy')
BN_name = 'BNBlock0One'
BN_title= 'BNBlock0One'
BNEXIn=np.load('data/body.bottleneck10.contract.1.running_mean.npy')
BNBiasVoltage=1
BNValueIn=np.load('data/body.bottleneck10.contract.1.running_var.npy')
BNWeightIn=np.load('data/positive_input_layer.body.bottleneck10.contract.1.a.npy')
BNBiasPIn=np.load('data/positive_input_layer.body.bottleneck10.contract.1.bias.npy')
BNBiasNIn=np.load('data/negative_input_layer.body.bottleneck10.contract.1.bias.npy')
InputValueIn= np.array(BN_simulation(BN_name,BN_title, InputValueIn, BNBiasVoltage,BNEXIn, BNWeightIn,BNValueIn,BNBiasPIn,BNBiasNIn))
np.save('output_data/data148.npy', InputValueIn)

InputValueInOne=np.load('output_data/data148.npy')
InputValueInTwo=np.load('output_data/data134.npy')
Add_name='BNBlock0One'
Add_title='BNBlock0One'
InputValueIn= np.array(Add_simulation(Add_name,Add_title, InputValueInOne,InputValueInTwo))
np.save('output_data/data149.npy', InputValueIn)

Conv_name = 'ConvOne'
Conv_title= 'ConvOne'
ConvStride = 1
ConvValuePIn = np.load('data/positive_input_layer.body.last_conv.conv.weight.npy')
ConvValueNIn = np.load('data/negative_input_layer.body.last_conv.conv.weight.npy')
ConvBiasPIn = None
ConvBiasNIn = None
ConvBiasVoltage=1
ConvPadding=0
InputValueIn= np.array(Conv_simulation(Conv_name,Conv_title, InputValueIn, ConvValuePIn, ConvValueNIn, ConvBiasVoltage,ConvPadding, ConvStride, ConvBiasPIn, ConvBiasNIn))
np.save('output_data/data150.npy', InputValueIn)


BN_name = 'BNOneq'
BN_title= 'BNOneq'
BNEXIn=np.load('data/body.last_conv.bn.running_mean.npy')
BNBiasVoltage=1
BNValueIn=np.load('data/body.last_conv.bn.running_var.npy')
BNWeightIn=np.load('data/positive_input_layer.body.last_conv.bn.a.npy')
BNBiasPIn=np.load('data/positive_input_layer.body.last_conv.bn.bias.npy')
BNBiasNIn=np.load('data/negative_input_layer.body.last_conv.bn.bias.npy')
InputValueIn= np.array(BN_simulation(BN_name,BN_title, InputValueIn, BNBiasVoltage,BNEXIn, BNWeightIn,BNValueIn,BNBiasPIn,BNBiasNIn))
np.save('output_data/data151.npy', InputValueIn)

hardswish_name='hardswish'
hardswish_title='hardswish'
InputValueIn= np.array(HardSwish_simulation(hardswish_name,hardswish_title, InputValueIn))
np.save('output_data/data152.npy', InputValueIn)

InputValueIn=np.load('output_data/data152.npy')
GAPool_name='GAPoolOne'
GAPool_title='GAPoolOne'
InputValueIn= np.array(GloAvePooling_simulation(GAPool_name,GAPool_title, InputValueIn))
np.save('output_data/data153.npy', InputValueIn)


FC_name = 'FCOne'
FC_title= 'FCOne'
FCBiasVoltage=1
FCValuePIn=np.load('data/positive_input_layer.classifier.2.weight.npy')
FCValueNIn=np.load('data/negative_input_layer.classifier.2.weight.npy')
FCBiasPIn=np.load('data/positive_input_layer.classifier.2.bias.npy')
FCBiasNIn=np.load('data/negative_input_layer.classifier.2.bias.npy')
InputValueIn=FullyConForLarge_simulation(FC_name,FC_title, InputValueIn, FCBiasVoltage,FCValuePIn, FCValueNIn,FCBiasPIn, FCBiasNIn)
np.save('output_data/data154.npy', InputValueIn)

hardswish_name='hardswish'
hardswish_title='hardswish'
InputValueIn= np.array(HardSwish_simulation(hardswish_name,hardswish_title, InputValueIn))
np.save('output_data/data155.npy', InputValueIn)


FC_name = 'FCTwo'
FC_title= 'FCTwo'
FCBiasVoltage=1
FCValuePIn=np.load('data/positive_input_layer.classifier.5.weight.npy')
FCValueNIn=np.load('data/negative_input_layer.classifier.5.weight.npy')
FCBiasPIn=np.load('data/positive_input_layer.classifier.5.bias.npy')
FCBiasNIn=np.load('data/negative_input_layer.classifier.5.bias.npy')
InputValueIn=FullyConForLarge_simulation(FC_name,FC_title, InputValueIn, FCBiasVoltage,FCValuePIn, FCValueNIn,FCBiasPIn, FCBiasNIn)
np.save('output_data/data156.npy', InputValueIn)
print(InputValueIn)



